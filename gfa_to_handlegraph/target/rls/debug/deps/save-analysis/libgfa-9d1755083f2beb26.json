{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126","program":"C:\\Users\\mstie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfa","--edition=2018","C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=9d1755083f2beb26","-C","extra-filename=-9d1755083f2beb26","--out-dir","d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps","-L","dependency=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps","--extern","bstr=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libbstr-be6018658ca34892.rmeta","--extern","bytemuck=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libbytemuck-980d175be6f59b6b.rmeta","--extern","fnv=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libfnv-57c9cd9bb049dc8e.rmeta","--extern","lazy_static=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\liblazy_static-d2a3d85c36d2e5c0.rmeta","--extern","nom=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libnom-be6ff26545334ec5.rmeta","--extern","regex=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libregex-bf9f4534384ca5ff.rmeta","--extern","serde=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libserde-b478a317e6b8f1a0.rmeta","--extern","serde_json=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libserde_json-7a1c47246fc40556.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\mstie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libgfa-9d1755083f2beb26.rmeta"},"prelude":{"crate_id":{"name":"gfa","disambiguator":[11397850726894900113,12831989703996939774]},"crate_root":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src","external_crates":[{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":14,"id":{"name":"bytemuck","disambiguator":[580299127335578643,13511358642238060011]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":15,"id":{"name":"bytemuck_derive","disambiguator":[12924882944875779174,10806906849248056671]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":16,"id":{"name":"nom","disambiguator":[9091223357539613525,13507357270493758415]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":17,"id":{"name":"memchr","disambiguator":[10217865961661611903,12425849656899133429]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":18,"id":{"name":"lexical_core","disambiguator":[16530379538302040642,6855246276856095009]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":19,"id":{"name":"bitflags","disambiguator":[4688005250658642750,16420404072416628965]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":20,"id":{"name":"cfg_if","disambiguator":[3734860209140798689,14506924879911982731]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":21,"id":{"name":"static_assertions","disambiguator":[1001455674286075304,1351961817227295928]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":22,"id":{"name":"arrayvec","disambiguator":[7414188231847043775,4675930894621384222]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":23,"id":{"name":"ryu","disambiguator":[15102016992269480173,8714734155128650866]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":24,"id":{"name":"serde","disambiguator":[12142570869610062187,11840381097694643382]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","num":25,"id":{"name":"serde_derive","disambiguator":[7010327342444808478,12112623561000368160]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","num":26,"id":{"name":"bstr","disambiguator":[5225874498542606662,11869065021348144871]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","num":27,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","num":28,"id":{"name":"regex_automata","disambiguator":[16393786523963514745,1579492795500074724]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","num":29,"id":{"name":"byteorder","disambiguator":[18240813998462569790,69349113415247948]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","num":30,"id":{"name":"fnv","disambiguator":[2263003884098538549,10377970547828183879]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","num":31,"id":{"name":"regex","disambiguator":[16708230686113223120,2504657980424758453]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[3965871490860746457,13775883191149742722]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","num":33,"id":{"name":"regex_syntax","disambiguator":[15691710534566068493,2760826650586284119]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","num":34,"id":{"name":"thread_local","disambiguator":[8502248513495985700,10971054996155022084]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","num":35,"id":{"name":"serde_json","disambiguator":[323418312460347939,4093881280337936323]}},{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","num":36,"id":{"name":"itoa","disambiguator":[14607357783814654536,3581029441771282690]}}],"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":6,"column_start":1,"column_end":16}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27062,"byte_end":27063,"line_start":5,"line_end":5,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Orientation","parent":{"krate":0,"index":149}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27062,"byte_end":27063,"line_start":5,"line_end":5,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"SegmentId","parent":{"krate":0,"index":149}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61331,"byte_end":61345,"line_start":3,"line_end":3,"column_start":23,"column_end":37},"alias_span":null,"name":"GFAFieldResult","value":"","parent":{"krate":0,"index":377}},{"kind":"Use","ref_id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61347,"byte_end":61356,"line_start":3,"line_end":3,"column_start":39,"column_end":48},"alias_span":null,"name":"GFAResult","value":"","parent":{"krate":0,"index":377}},{"kind":"Use","ref_id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61358,"byte_end":61368,"line_start":3,"line_end":3,"column_start":50,"column_end":60},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":377}},{"kind":"Use","ref_id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61370,"byte_end":61385,"line_start":3,"line_end":3,"column_start":62,"column_end":77},"alias_span":null,"name":"ParseFieldError","value":"","parent":{"krate":0,"index":377}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":0,"byte_end":94,"line_start":1,"line_end":6,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":90},{"krate":0,"index":149},{"krate":0,"index":328},{"krate":0,"index":377},{"krate":0,"index":511}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cigar","qualname":"::cigar","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":1896},{"krate":0,"index":6},{"krate":0,"index":1898},{"krate":0,"index":7},{"krate":0,"index":1900},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":1904},{"krate":0,"index":13},{"krate":0,"index":1906},{"krate":0,"index":547},{"krate":0,"index":652},{"krate":0,"index":650},{"krate":0,"index":649},{"krate":0,"index":647},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":639},{"krate":0,"index":637},{"krate":0,"index":634},{"krate":0,"index":628},{"krate":0,"index":575},{"krate":0,"index":14},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":656},{"krate":0,"index":719},{"krate":0,"index":724},{"krate":0,"index":707},{"krate":0,"index":713},{"krate":0,"index":718},{"krate":0,"index":705},{"krate":0,"index":703},{"krate":0,"index":702},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":689},{"krate":0,"index":687},{"krate":0,"index":684},{"krate":0,"index":678},{"krate":0,"index":659},{"krate":0,"index":31},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":725},{"krate":0,"index":775},{"krate":0,"index":773},{"krate":0,"index":771},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":758},{"krate":0,"index":756},{"krate":0,"index":753},{"krate":0,"index":747},{"krate":0,"index":728},{"krate":0,"index":45},{"krate":0,"index":88}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":405,"byte_end":406,"line_start":22,"line_end":22,"column_start":5,"column_end":6},"name":"M","qualname":"::cigar::CIGAROp::M","value":"CIGAROp::M","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":416,"byte_end":417,"line_start":23,"line_end":23,"column_start":5,"column_end":6},"name":"I","qualname":"::cigar::CIGAROp::I","value":"CIGAROp::I","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":427,"byte_end":428,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"D","qualname":"::cigar::CIGAROp::D","value":"CIGAROp::D","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":438,"byte_end":439,"line_start":25,"line_end":25,"column_start":5,"column_end":6},"name":"N","qualname":"::cigar::CIGAROp::N","value":"CIGAROp::N","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":449,"byte_end":450,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"S","qualname":"::cigar::CIGAROp::S","value":"CIGAROp::S","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":460,"byte_end":461,"line_start":27,"line_end":27,"column_start":5,"column_end":6},"name":"H","qualname":"::cigar::CIGAROp::H","value":"CIGAROp::H","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":471,"byte_end":472,"line_start":28,"line_end":28,"column_start":5,"column_end":6},"name":"P","qualname":"::cigar::CIGAROp::P","value":"CIGAROp::P","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":482,"byte_end":483,"line_start":29,"line_end":29,"column_start":5,"column_end":6},"name":"E","qualname":"::cigar::CIGAROp::E","value":"CIGAROp::E","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":493,"byte_end":494,"line_start":30,"line_end":30,"column_start":5,"column_end":6},"name":"X","qualname":"::cigar::CIGAROp::X","value":"CIGAROp::X","parent":{"krate":0,"index":547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":391,"byte_end":398,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"name":"CIGAROp","qualname":"::cigar::CIGAROp","value":"pub enum CIGAROp { M = , I = , D = , N = , S = , H = , P = , E = , X = , }","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":219,"byte_end":230,"line_start":7,"line_end":7,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1331,"byte_end":1345,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"consumes_query","qualname":"<CIGAROp>::consumes_query","value":"pub fn consumes_query(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1310,"byte_end":1319,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1513,"byte_end":1531,"line_start":79,"line_end":79,"column_start":12,"column_end":30},"name":"consumes_reference","qualname":"<CIGAROp>::consumes_reference","value":"pub fn consumes_reference(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1492,"byte_end":1501,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1699,"byte_end":1719,"line_start":88,"line_end":88,"column_start":12,"column_end":32},"name":"is_match_or_mismatch","qualname":"<CIGAROp>::is_match_or_mismatch","value":"pub fn is_match_or_mismatch(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1678,"byte_end":1687,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2618,"byte_end":2627,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"CIGARPair","qualname":"::cigar::CIGARPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory-efficient representation of a single CIGAR op + length, as\n a u32.\n","sig":null,"attributes":[{"value":"/ A memory-efficient representation of a single CIGAR op + length, as","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2345,"byte_end":2416,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/ a u32.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2417,"byte_end":2427,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2428,"byte_end":2448,"line_start":118,"line_end":118,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2702,"byte_end":2705,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<CIGARPair>::new","value":"pub fn new(u32, CIGAROp) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2906,"byte_end":2910,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"zero","qualname":"<CIGARPair>::zero","value":"pub fn zero(CIGAROp) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2885,"byte_end":2894,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3010,"byte_end":3013,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"len","qualname":"<CIGARPair>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2989,"byte_end":2998,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3082,"byte_end":3089,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"set_len","qualname":"<CIGARPair>::set_len","value":"pub fn set_len(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3061,"byte_end":3070,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3225,"byte_end":3227,"line_start":162,"line_end":162,"column_start":12,"column_end":14},"name":"op","qualname":"<CIGARPair>::op","value":"pub fn op(&Self) -> CIGAROp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3204,"byte_end":3213,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3348,"byte_end":3357,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"into_pair","qualname":"<CIGARPair>::into_pair","value":"pub fn into_pair(Self) -> (u32, CIGAROp)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3478,"byte_end":3487,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"from_pair","qualname":"<CIGARPair>::from_pair","value":"pub fn from_pair((u32, CIGAROp)) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":4331,"byte_end":4336,"line_start":215,"line_end":215,"column_start":12,"column_end":17},"name":"CIGAR","qualname":"::cigar::CIGAR","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":4337,"byte_end":4355,"line_start":215,"line_end":215,"column_start":18,"column_end":36},"name":"0","qualname":"::cigar::CIGAR::0","value":"std::vec::Vec<cigar::CIGARPair>","parent":{"krate":0,"index":725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":4383,"byte_end":4393,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"from_pairs","qualname":"<CIGAR>::from_pairs","value":"pub fn from_pairs<I>(I) -> Self where I: IntoIterator<Item = (u32, CIGAROp)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":5704,"byte_end":5719,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"from_bytestring","qualname":"<CIGAR>::from_bytestring","value":"pub fn from_bytestring(&[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a CIGAR object from an ASCII byte slice\n","sig":null,"attributes":[{"value":"/ Parse a CIGAR object from an ASCII byte slice","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":5643,"byte_end":5692,"line_start":261,"line_end":261,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":5824,"byte_end":5827,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"len","qualname":"<CIGAR>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6014,"byte_end":6022,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CIGAR>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" is_empty corresponds to whether or not the contained vector is\n empty\n","sig":null,"attributes":[{"value":"/ is_empty corresponds to whether or not the contained vector is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":5922,"byte_end":5988,"line_start":270,"line_end":270,"column_start":5,"column_end":71}},{"value":"/ empty","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":5993,"byte_end":6002,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6240,"byte_end":6244,"line_start":279,"line_end":279,"column_start":12,"column_end":16},"name":"iter","qualname":"<CIGAR>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the individual CIGAR operations in\n the string, e.g. an iterator over \"3M2D\" would produce [M, M,\n M, D, D]\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the individual CIGAR operations in","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6077,"byte_end":6141,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ the string, e.g. an iterator over \"3M2D\" would produce [M, M,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6146,"byte_end":6211,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/ M, D, D]","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6216,"byte_end":6228,"line_start":278,"line_end":278,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6744,"byte_end":6749,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"index","qualname":"<CIGAR>::index","value":"pub fn index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Given an index along the cigar string, return a pair of\n indices, where the first is the index to the cigar operation\n in this cigar that includes the given index, and the second is\n the remainder of the index, or the number of operations at the\n index that will be kept\n","sig":null,"attributes":[{"value":"/ Given an index along the cigar string, return a pair of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6430,"byte_end":6489,"line_start":285,"line_end":285,"column_start":5,"column_end":64}},{"value":"/ indices, where the first is the index to the cigar operation","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6494,"byte_end":6558,"line_start":286,"line_end":286,"column_start":5,"column_end":69}},{"value":"/ in this cigar that includes the given index, and the second is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6563,"byte_end":6629,"line_start":287,"line_end":287,"column_start":5,"column_end":71}},{"value":"/ the remainder of the index, or the number of operations at the","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6634,"byte_end":6700,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/ index that will be kept","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":6705,"byte_end":6732,"line_start":289,"line_end":289,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":7180,"byte_end":7191,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"query_index","qualname":"<CIGAR>::query_index","value":"pub fn query_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":7803,"byte_end":7812,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"ref_index","qualname":"<CIGAR>::ref_index","value":"pub fn ref_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":8428,"byte_end":8444,"line_start":342,"line_end":342,"column_start":12,"column_end":28},"name":"split_with_index","qualname":"<CIGAR>::split_with_index","value":"pub fn split_with_index(&Self, (usize, usize)) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":9131,"byte_end":9139,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"split_at","qualname":"<CIGAR>::split_at","value":"pub fn split_at(&Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split a cigar at the provided index, returning two new cigars;\n e.g. splitting 4M at index 1 produces (1M, 3M); splitting\n 6M3I4D at index 8 produces (6M2I, 1I4D)\n","sig":null,"attributes":[{"value":"/ Split a cigar at the provided index, returning two new cigars;","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":8939,"byte_end":9005,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ e.g. splitting 4M at index 1 produces (1M, 3M); splitting","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":9010,"byte_end":9071,"line_start":360,"line_end":360,"column_start":5,"column_end":66}},{"value":"/ 6M3I4D at index 8 produces (6M2I, 1I4D)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":9076,"byte_end":9119,"line_start":361,"line_end":361,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":90},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gafpaf","qualname":"::gafpaf","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":777},{"krate":0,"index":799},{"krate":0,"index":796},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":101},{"krate":0,"index":802},{"krate":0,"index":819},{"krate":0,"index":817},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":821},{"krate":0,"index":834},{"krate":0,"index":832},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":124},{"krate":0,"index":132},{"krate":0,"index":836},{"krate":0,"index":852},{"krate":0,"index":849},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13008,"byte_end":13011,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"GAF","qualname":"::gafpaf::GAF","value":"GAF { seq_name, seq_len, seq_range, strand, path, path_len, path_range, residue_matches, block_length, quality, optional }","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":" A GAF record, with optional fields T. Can be created by using\n `parse_gaf`, and the Display implementation produces\n spec-compliant tab-delimited output.\n","sig":null,"attributes":[{"value":"/ A GAF record, with optional fields T. Can be created by using","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":12798,"byte_end":12863,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ `parse_gaf`, and the Display implementation produces","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":12864,"byte_end":12920,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/ spec-compliant tab-delimited output.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":12921,"byte_end":12961,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13036,"byte_end":13044,"line_start":14,"line_end":14,"column_start":9,"column_end":17},"name":"seq_name","qualname":"::gafpaf::GAF::seq_name","value":"bstr::BString","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13063,"byte_end":13070,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"seq_len","qualname":"::gafpaf::GAF::seq_len","value":"usize","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13087,"byte_end":13096,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"name":"seq_range","qualname":"::gafpaf::GAF::seq_range","value":"(usize, usize)","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13122,"byte_end":13128,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"strand","qualname":"::gafpaf::GAF::strand","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":783},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13151,"byte_end":13155,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"path","qualname":"::gafpaf::GAF::path","value":"gafpaf::GAFPath","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":784},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13174,"byte_end":13182,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"name":"path_len","qualname":"::gafpaf::GAF::path_len","value":"usize","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":785},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13199,"byte_end":13209,"line_start":20,"line_end":20,"column_start":9,"column_end":19},"name":"path_range","qualname":"::gafpaf::GAF::path_range","value":"(usize, usize)","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":786},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13235,"byte_end":13250,"line_start":21,"line_end":21,"column_start":9,"column_end":24},"name":"residue_matches","qualname":"::gafpaf::GAF::residue_matches","value":"usize","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13267,"byte_end":13279,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"name":"block_length","qualname":"::gafpaf::GAF::block_length","value":"usize","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13296,"byte_end":13303,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"quality","qualname":"::gafpaf::GAF::quality","value":"u8","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13317,"byte_end":13325,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"optional","qualname":"::gafpaf::GAF::optional","value":"T","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14279,"byte_end":14284,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"SegId","qualname":"::gafpaf::GAFStep::SegId","value":"GAFStep::SegId(Orientation, BString)","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14312,"byte_end":14322,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"name":"StableIntv","qualname":"::gafpaf::GAFStep::StableIntv","value":"GAFStep::StableIntv(Orientation, BString, usize, usize)","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14265,"byte_end":14272,"line_start":63,"line_end":63,"column_start":10,"column_end":17},"name":"GAFStep","qualname":"::gafpaf::GAFStep","value":"pub enum GAFStep {\n    SegId(Orientation, BString),\n    StableIntv(Orientation, BString, usize, usize),\n}","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":807}],"decl_id":null,"docs":" enum representing the two kinds of step in a GAF path; either an\n oriented GFA segment ID, or an oriented interval on a stable rGFA\n reference.\n","sig":null,"attributes":[{"value":"/ enum representing the two kinds of step in a GAF path; either an","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14067,"byte_end":14135,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/ oriented GFA segment ID, or an oriented interval on a stable rGFA","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14136,"byte_end":14205,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ reference.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14206,"byte_end":14220,"line_start":61,"line_end":61,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16555,"byte_end":16563,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"StableId","qualname":"::gafpaf::GAFPath::StableId","value":"GAFPath::StableId(BString)","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16578,"byte_end":16588,"line_start":135,"line_end":135,"column_start":5,"column_end":15},"name":"OrientIntv","qualname":"::gafpaf::GAFPath::OrientIntv","value":"GAFPath::OrientIntv(Vec<GAFStep>)","parent":{"krate":0,"index":821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16541,"byte_end":16548,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"name":"GAFPath","qualname":"::gafpaf::GAFPath","value":"pub enum GAFPath { StableId(BString), OrientIntv(Vec<GAFStep>), }","parent":null,"children":[{"krate":0,"index":822},{"krate":0,"index":825}],"decl_id":null,"docs":" enum representing the two kinds of GAF path; either the ID of a\n stable rGFA identifier, or a list of oriented steps.\n","sig":null,"attributes":[{"value":"/ enum representing the two kinds of GAF path; either the ID of a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16146,"byte_end":16213,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"/ stable rGFA identifier, or a list of oriented steps.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16214,"byte_end":16270,"line_start":127,"line_end":127,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":836},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17728,"byte_end":17731,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"PAF","qualname":"::gafpaf::PAF","value":"PAF { query_seq_name, query_seq_len, query_seq_range, strand, target_seq_name, target_seq_len, target_seq_range, residue_matches, block_length, quality, optional }","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848}],"decl_id":null,"docs":" A PAF record, with optional fields T. Can be created by using\n `parse_gaf`, and the Display implementation produces\n spec-compliant tab-delimited output.\n","sig":null,"attributes":[{"value":"/ A PAF record, with optional fields T. Can be created by using","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17529,"byte_end":17594,"line_start":171,"line_end":171,"column_start":1,"column_end":66}},{"value":"/ `parse_gaf`, and the Display implementation produces","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17595,"byte_end":17651,"line_start":172,"line_end":172,"column_start":1,"column_end":57}},{"value":"/ spec-compliant tab-delimited output.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17652,"byte_end":17692,"line_start":173,"line_end":173,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":838},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17756,"byte_end":17770,"line_start":176,"line_end":176,"column_start":9,"column_end":23},"name":"query_seq_name","qualname":"::gafpaf::PAF::query_seq_name","value":"bstr::BString","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17789,"byte_end":17802,"line_start":177,"line_end":177,"column_start":9,"column_end":22},"name":"query_seq_len","qualname":"::gafpaf::PAF::query_seq_len","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17819,"byte_end":17834,"line_start":178,"line_end":178,"column_start":9,"column_end":24},"name":"query_seq_range","qualname":"::gafpaf::PAF::query_seq_range","value":"(usize, usize)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17860,"byte_end":17866,"line_start":179,"line_end":179,"column_start":9,"column_end":15},"name":"strand","qualname":"::gafpaf::PAF::strand","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17889,"byte_end":17904,"line_start":180,"line_end":180,"column_start":9,"column_end":24},"name":"target_seq_name","qualname":"::gafpaf::PAF::target_seq_name","value":"bstr::BString","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17923,"byte_end":17937,"line_start":181,"line_end":181,"column_start":9,"column_end":23},"name":"target_seq_len","qualname":"::gafpaf::PAF::target_seq_len","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17954,"byte_end":17970,"line_start":182,"line_end":182,"column_start":9,"column_end":25},"name":"target_seq_range","qualname":"::gafpaf::PAF::target_seq_range","value":"(usize, usize)","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17996,"byte_end":18011,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"name":"residue_matches","qualname":"::gafpaf::PAF::residue_matches","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":846},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":18028,"byte_end":18040,"line_start":184,"line_end":184,"column_start":9,"column_end":21},"name":"block_length","qualname":"::gafpaf::PAF::block_length","value":"usize","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":18057,"byte_end":18064,"line_start":185,"line_end":185,"column_start":9,"column_end":16},"name":"quality","qualname":"::gafpaf::PAF::quality","value":"u8","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":18078,"byte_end":18086,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"name":"optional","qualname":"::gafpaf::PAF::optional","value":"T","parent":{"krate":0,"index":836},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":19547,"byte_end":19556,"line_start":247,"line_end":247,"column_start":8,"column_end":17},"name":"parse_paf","qualname":"::gafpaf::parse_paf","value":"pub fn parse_paf<I, T>(I) -> Option<PAF<T>> where I: Iterator,\nI::Item: AsRef<[u8]>, T: OptFields","parent":null,"children":[],"decl_id":null,"docs":" Parse a PAF record from an iterator over the tab-delimited fields\n of bytes\n","sig":null,"attributes":[{"value":"/ Parse a PAF record from an iterator over the tab-delimited fields","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":19457,"byte_end":19526,"line_start":245,"line_end":245,"column_start":1,"column_end":70}},{"value":"/ of bytes","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":19527,"byte_end":19539,"line_start":246,"line_end":246,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":20617,"byte_end":20626,"line_start":286,"line_end":286,"column_start":8,"column_end":17},"name":"parse_gaf","qualname":"::gafpaf::parse_gaf","value":"pub fn parse_gaf<I, T>(I) -> Option<GAF<T>> where I: Iterator,\nI::Item: AsRef<[u8]>, T: OptFields","parent":null,"children":[],"decl_id":null,"docs":" Parse a GAF record from an iterator over the tab-delimited fields\n of bytes\n","sig":null,"attributes":[{"value":"/ Parse a GAF record from an iterator over the tab-delimited fields","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":20527,"byte_end":20596,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"/ of bytes","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":20597,"byte_end":20609,"line_start":285,"line_end":285,"column_start":1,"column_end":13}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gfa","qualname":"::gfa","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":213},{"krate":0,"index":238},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":2000},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":2008},{"krate":0,"index":268},{"krate":0,"index":2010},{"krate":0,"index":1045},{"krate":0,"index":1093},{"krate":0,"index":1089},{"krate":0,"index":1085},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1053},{"krate":0,"index":1097},{"krate":0,"index":1135},{"krate":0,"index":1131},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1115},{"krate":0,"index":1139},{"krate":0,"index":1182},{"krate":0,"index":1177},{"krate":0,"index":1167},{"krate":0,"index":1171},{"krate":0,"index":1158},{"krate":0,"index":269},{"krate":0,"index":280},{"krate":0,"index":1187},{"krate":0,"index":1211},{"krate":0,"index":1208},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1191},{"krate":0,"index":284},{"krate":0,"index":1214},{"krate":0,"index":1316},{"krate":0,"index":1312},{"krate":0,"index":1308},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1284},{"krate":0,"index":1276},{"krate":0,"index":1225},{"krate":0,"index":1220},{"krate":0,"index":287},{"krate":0,"index":1320},{"krate":0,"index":1443},{"krate":0,"index":1439},{"krate":0,"index":1435},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1399},{"krate":0,"index":1391},{"krate":0,"index":1334},{"krate":0,"index":1329},{"krate":0,"index":290},{"krate":0,"index":1447},{"krate":0,"index":1577},{"krate":0,"index":1573},{"krate":0,"index":1569},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1529},{"krate":0,"index":1521},{"krate":0,"index":1462},{"krate":0,"index":1457},{"krate":0,"index":1581},{"krate":0,"index":1697},{"krate":0,"index":1693},{"krate":0,"index":1689},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1657},{"krate":0,"index":1649},{"krate":0,"index":1594},{"krate":0,"index":1589},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":318},{"krate":0,"index":323}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name_conversion","qualname":"::gfa::name_conversion","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":1968},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":1972},{"krate":0,"index":171},{"krate":0,"index":1974},{"krate":0,"index":172},{"krate":0,"index":855},{"krate":0,"index":904},{"krate":0,"index":859},{"krate":0,"index":174},{"krate":0,"index":910},{"krate":0,"index":969},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":959},{"krate":0,"index":914},{"krate":0,"index":181}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":38907,"byte_end":38914,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"NameMap","qualname":"::gfa::name_conversion::NameMap","value":"NameMap {  }","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39168,"byte_end":39177,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"save_json","qualname":"<NameMap>::save_json","value":"pub fn save_json<P: AsRef<std::path::Path>>(&Self, P) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Save the NameMap to a JSON file.\n","sig":null,"attributes":[{"value":"/ Save the NameMap to a JSON file.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39120,"byte_end":39156,"line_start":111,"line_end":111,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39589,"byte_end":39598,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"load_json","qualname":"<NameMap>::load_json","value":"pub fn load_json<P: AsRef<std::path::Path>>(P) -> std::io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load a NameMap from a JSON file.\n","sig":null,"attributes":[{"value":"/ Load a NameMap from a JSON file.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39541,"byte_end":39577,"line_start":124,"line_end":124,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39938,"byte_end":39946,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"map_name","qualname":"<NameMap>::map_name","value":"pub fn map_name<N: AsRef<[u8]>>(&Self, N) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":40066,"byte_end":40082,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"inverse_map_name","qualname":"<NameMap>::inverse_map_name","value":"pub fn inverse_map_name(&Self, usize) -> Option<&BStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":42206,"byte_end":42226,"line_start":218,"line_end":218,"column_start":12,"column_end":32},"name":"gfa_bstring_to_usize","qualname":"<NameMap>::gfa_bstring_to_usize","value":"pub fn gfa_bstring_to_usize<T: OptFields>(&Self, &GFA<BString, T>, bool)\n-> Option<GFA<usize, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":44085,"byte_end":44105,"line_start":273,"line_end":273,"column_start":12,"column_end":32},"name":"gfa_usize_to_bstring","qualname":"<NameMap>::gfa_usize_to_bstring","value":"pub fn gfa_usize_to_bstring<T: OptFields>(&Self, &GFA<usize, T>)\n-> Option<GFA<BString, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":45900,"byte_end":45914,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"build_from_gfa","qualname":"<NameMap>::build_from_gfa","value":"pub fn build_from_gfa<T: OptFields>(&GFA<BString, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"orientation","qualname":"::gfa::orientation","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":1984},{"krate":0,"index":216},{"krate":0,"index":1986},{"krate":0,"index":217},{"krate":0,"index":971},{"krate":0,"index":1032},{"krate":0,"index":1030},{"krate":0,"index":1029},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1024},{"krate":0,"index":1018},{"krate":0,"index":979},{"krate":0,"index":976},{"krate":0,"index":218},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":972},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49913,"byte_end":49920,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"Forward","qualname":"::gfa::orientation::Orientation::Forward","value":"Orientation::Forward","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":974},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49926,"byte_end":49934,"line_start":11,"line_end":11,"column_start":5,"column_end":13},"name":"Backward","qualname":"::gfa::orientation::Orientation::Backward","value":"Orientation::Backward","parent":{"krate":0,"index":971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49895,"byte_end":49906,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::gfa::orientation::Orientation","value":"pub enum Orientation { Forward, Backward, }","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":974}],"decl_id":null,"docs":" Represents segment orientation/strand\n","sig":null,"attributes":[{"value":"/ Represents segment orientation/strand","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49754,"byte_end":49795,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50063,"byte_end":50084,"line_start":17,"line_end":17,"column_start":12,"column_end":33},"name":"from_bytes_plus_minus","qualname":"<Orientation>::from_bytes_plus_minus","value":"pub fn from_bytes_plus_minus<T: AsRef<[u8]>>(T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse an orientation from a single-element, where + is\n Forward, - is Backward\n","sig":null,"attributes":[{"value":"/ Parse an orientation from a single-element, where + is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49962,"byte_end":50020,"line_start":15,"line_end":15,"column_start":5,"column_end":63}},{"value":"/ Forward, - is Backward","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50025,"byte_end":50051,"line_start":16,"line_end":16,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50302,"byte_end":50313,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"parse_error","qualname":"<Orientation>::parse_error","value":"pub fn parse_error(Option<Self>) -> Result<Self, ParseFieldError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50439,"byte_end":50455,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"write_plus_minus","qualname":"<Orientation>::write_plus_minus","value":"pub fn write_plus_minus(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50699,"byte_end":50717,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"plus_minus_as_byte","qualname":"<Orientation>::plus_minus_as_byte","value":"pub fn plus_minus_as_byte(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50958,"byte_end":50974,"line_start":49,"line_end":49,"column_start":12,"column_end":28},"name":"from_bytes_gt_ln","qualname":"<Orientation>::from_bytes_gt_ln","value":"pub fn from_bytes_gt_ln<T: AsRef<[u8]>>(T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse an orientation from a single-element bytestring, where >\n is Forward, < is Backward\n","sig":null,"attributes":[{"value":"/ Parse an orientation from a single-element bytestring, where >","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50846,"byte_end":50912,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/ is Forward, < is Backward","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":50917,"byte_end":50946,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51192,"byte_end":51203,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"write_gt_ln","qualname":"<Orientation>::write_gt_ln","value":"pub fn write_gt_ln(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51840,"byte_end":51850,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"is_reverse","qualname":"<Orientation>::is_reverse","value":"pub fn is_reverse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::gfa::traits","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52711,"byte_end":52720,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"SegmentId","qualname":"::gfa::traits::SegmentId","value":"SegmentId: Sized + Default","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" Trait for the types that can be parsed and used as segment IDs;\n will probably only be usize and BString.\n","sig":null,"attributes":[{"value":"/ Trait for the types that can be parsed and used as segment IDs;","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52588,"byte_end":52655,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/ will probably only be usize and BString.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52656,"byte_end":52700,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52750,"byte_end":52755,"line_start":10,"line_end":10,"column_start":11,"column_end":16},"name":"ERROR","qualname":"::gfa::traits::SegmentId::ERROR","value":"ParseFieldError","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52782,"byte_end":52790,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"parse_id","qualname":"::gfa::traits::SegmentId::parse_id","value":"pub fn parse_id(&[u8]) -> Option<Self>","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52830,"byte_end":52840,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"parse_next","qualname":"::gfa::traits::SegmentId::parse_next","value":"pub fn parse_next<I>(I) -> Result<Self, ParseFieldError> where I: Iterator,\nI::Item: AsRef<[u8]>","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27492,"byte_end":27495,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"GFA","qualname":"::gfa::GFA","value":"GFA { header, segments, links, containments, paths }","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" This module defines the various GFA line types, the GFA object,\n and some utility functions and types.\n Simple representation of a parsed GFA file, using a Vec<T> to\n store each separate GFA line type.\n","sig":null,"attributes":[{"value":"/ This module defines the various GFA line types, the GFA object,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27209,"byte_end":27276,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/ and some utility functions and types.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27277,"byte_end":27318,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/ Simple representation of a parsed GFA file, using a Vec<T> to","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27320,"byte_end":27385,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ store each separate GFA line type.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27386,"byte_end":27424,"line_start":17,"line_end":17,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1048},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27523,"byte_end":27529,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"header","qualname":"::gfa::GFA::header","value":"gfa::Header<T>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27550,"byte_end":27558,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"segments","qualname":"::gfa::GFA::segments","value":"std::vec::Vec<gfa::Segment<N, T>>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1050},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27588,"byte_end":27593,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"links","qualname":"::gfa::GFA::links","value":"std::vec::Vec<gfa::Link<N, T>>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27620,"byte_end":27632,"line_start":23,"line_end":23,"column_start":9,"column_end":21},"name":"containments","qualname":"::gfa::GFA::containments","value":"std::vec::Vec<gfa::Containment<N, T>>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1052},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27666,"byte_end":27671,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"paths","qualname":"::gfa::GFA::paths","value":"std::vec::Vec<gfa::Path<N, T>>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27831,"byte_end":27837,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Header","qualname":"::gfa::Line::Header","value":"Line::Header(Header<T>)","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1103},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27854,"byte_end":27861,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Segment","qualname":"::gfa::Line::Segment","value":"Line::Segment(Segment<N, T>)","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1106},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27882,"byte_end":27886,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"Link","qualname":"::gfa::Line::Link","value":"Line::Link(Link<N, T>)","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1109},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27904,"byte_end":27915,"line_start":33,"line_end":33,"column_start":5,"column_end":16},"name":"Containment","qualname":"::gfa::Line::Containment","value":"Line::Containment(Containment<N, T>)","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27940,"byte_end":27944,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Path","qualname":"::gfa::Line::Path","value":"Line::Path(Path<N, T>)","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27803,"byte_end":27807,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Line","qualname":"::gfa::Line","value":"pub enum Line<N, T: OptFields> {\n    Header(Header<T>),\n    Segment(Segment<N, T>),\n    Link(Link<N, T>),\n    Containment(Containment<N, T>),\n    Path(Path<N, T>),\n}","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1112}],"decl_id":null,"docs":" Enum containing the different kinds of GFA lines.\n","sig":null,"attributes":[{"value":"/ Enum containing the different kinds of GFA lines.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27693,"byte_end":27746,"line_start":27,"line_end":27,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1143},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28052,"byte_end":28058,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"Header","qualname":"::gfa::LineRef::Header","value":"LineRef::Header(&'a Header<T>)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28079,"byte_end":28086,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Segment","qualname":"::gfa::LineRef::Segment","value":"LineRef::Segment(&'a Segment<N, T>)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28111,"byte_end":28115,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Link","qualname":"::gfa::LineRef::Link","value":"LineRef::Link(&'a Link<N, T>)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28137,"byte_end":28148,"line_start":42,"line_end":42,"column_start":5,"column_end":16},"name":"Containment","qualname":"::gfa::LineRef::Containment","value":"LineRef::Containment(&'a Containment<N, T>)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28177,"byte_end":28181,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Path","qualname":"::gfa::LineRef::Path","value":"LineRef::Path(&'a Path<N, T>)","parent":{"krate":0,"index":1139},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28017,"byte_end":28024,"line_start":38,"line_end":38,"column_start":10,"column_end":17},"name":"LineRef","qualname":"::gfa::LineRef","value":"pub enum LineRef<'a, N, T: OptFields> {\n    Header(&'a Header<T>),\n    Segment(&'a Segment<N, T>),\n    Link(&'a Link<N, T>),\n    Containment(&'a Containment<N, T>),\n    Path(&'a Path<N, T>),\n}","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28479,"byte_end":28490,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"insert_line","qualname":"<GFA<N, T>>::insert_line","value":"pub fn insert_line(&mut Self, Line<N, T>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a GFA line (wrapped in the Line enum) into an existing\n GFA. Simply pushes it into the corresponding Vec in the GFA,\n or replaces the header, so there's no deduplication or sorting\n taking place.\n","sig":null,"attributes":[{"value":"/ Insert a GFA line (wrapped in the Line enum) into an existing","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28240,"byte_end":28305,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/ GFA. Simply pushes it into the corresponding Vec in the GFA,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28310,"byte_end":28374,"line_start":48,"line_end":48,"column_start":5,"column_end":69}},{"value":"/ or replaces the header, so there's no deduplication or sorting","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28379,"byte_end":28445,"line_start":49,"line_end":49,"column_start":5,"column_end":71}},{"value":"/ taking place.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28450,"byte_end":28467,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29023,"byte_end":29038,"line_start":65,"line_end":65,"column_start":12,"column_end":27},"name":"lines_into_iter","qualname":"<GFA<N, T>>::lines_into_iter","value":"pub fn lines_into_iter(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume a GFA object to produce an iterator over all the lines\n contained within. The iterator first produces all segments, then\n links, then containments, and finally paths.\n","sig":null,"attributes":[{"value":"/ Consume a GFA object to produce an iterator over all the lines","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28819,"byte_end":28885,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ contained within. The iterator first produces all segments, then","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28890,"byte_end":28958,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ links, then containments, and finally paths.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28963,"byte_end":29011,"line_start":64,"line_end":64,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29477,"byte_end":29487,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"lines_iter","qualname":"<GFA<N, T>>::lines_iter","value":"pub fn lines_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over references to the lines in the GFA\n","sig":null,"attributes":[{"value":"/ Return an iterator over references to the lines in the GFA","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29403,"byte_end":29465,"line_start":75,"line_end":75,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29900,"byte_end":29903,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<GFA<N, T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30045,"byte_end":30051,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"Header","qualname":"::gfa::Header","value":"Header { version, optional }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190}],"decl_id":null,"docs":" The header line of a GFA graph\n","sig":null,"attributes":[{"value":"/ The header line of a GFA graph","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29952,"byte_end":29986,"line_start":93,"line_end":93,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30076,"byte_end":30083,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"name":"version","qualname":"::gfa::Header::version","value":"std::option::Option<bstr::BString>","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30110,"byte_end":30118,"line_start":97,"line_end":97,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Header::optional","value":"T","parent":{"krate":0,"index":1187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1214},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30538,"byte_end":30545,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"Segment","qualname":"::gfa::Segment","value":"Segment { name, sequence, optional }","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219}],"decl_id":null,"docs":" A segment in a GFA graph. Generic over the name type, but\n currently the parser is only defined for N = BString\n","sig":null,"attributes":[{"value":"/ A segment in a GFA graph. Generic over the name type, but","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30315,"byte_end":30376,"line_start":109,"line_end":109,"column_start":1,"column_end":62}},{"value":"/ currently the parser is only defined for N = BString","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30377,"byte_end":30433,"line_start":110,"line_end":110,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1217},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30573,"byte_end":30577,"line_start":115,"line_end":115,"column_start":9,"column_end":13},"name":"name","qualname":"::gfa::Segment::name","value":"N","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30590,"byte_end":30598,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"sequence","qualname":"::gfa::Segment::sequence","value":"bstr::BString","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30617,"byte_end":30625,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Segment::optional","value":"T","parent":{"krate":0,"index":1214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30685,"byte_end":30688,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<Segment<BString, T>>::new","value":"pub fn new(&[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30998,"byte_end":31002,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Link","qualname":"::gfa::Link","value":"Link { from_segment, from_orient, to_segment, to_orient, overlap, optional }","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31030,"byte_end":31042,"line_start":134,"line_end":134,"column_start":9,"column_end":21},"name":"from_segment","qualname":"::gfa::Link::from_segment","value":"N","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31055,"byte_end":31066,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"name":"from_orient","qualname":"::gfa::Link::from_orient","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31089,"byte_end":31099,"line_start":136,"line_end":136,"column_start":9,"column_end":19},"name":"to_segment","qualname":"::gfa::Link::to_segment","value":"N","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31112,"byte_end":31121,"line_start":137,"line_end":137,"column_start":9,"column_end":18},"name":"to_orient","qualname":"::gfa::Link::to_orient","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31144,"byte_end":31151,"line_start":138,"line_end":138,"column_start":9,"column_end":16},"name":"overlap","qualname":"::gfa::Link::overlap","value":"bstr::BString","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31170,"byte_end":31178,"line_start":139,"line_end":139,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Link::optional","value":"T","parent":{"krate":0,"index":1320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31235,"byte_end":31238,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<Link<BString, T>>::new","value":"pub fn new(&[u8], Orientation, &[u8], Orientation, &[u8]) -> Link<BString, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31769,"byte_end":31780,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"Containment","qualname":"::gfa::Containment","value":"Containment { container_name, container_orient, contained_name, contained_orient, pos, overlap, optional }","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31808,"byte_end":31822,"line_start":165,"line_end":165,"column_start":9,"column_end":23},"name":"container_name","qualname":"::gfa::Containment::container_name","value":"N","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31835,"byte_end":31851,"line_start":166,"line_end":166,"column_start":9,"column_end":25},"name":"container_orient","qualname":"::gfa::Containment::container_orient","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31874,"byte_end":31888,"line_start":167,"line_end":167,"column_start":9,"column_end":23},"name":"contained_name","qualname":"::gfa::Containment::contained_name","value":"N","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31901,"byte_end":31917,"line_start":168,"line_end":168,"column_start":9,"column_end":25},"name":"contained_orient","qualname":"::gfa::Containment::contained_orient","value":"gfa::orientation::Orientation","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31940,"byte_end":31943,"line_start":169,"line_end":169,"column_start":9,"column_end":12},"name":"pos","qualname":"::gfa::Containment::pos","value":"usize","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1455},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31960,"byte_end":31967,"line_start":170,"line_end":170,"column_start":9,"column_end":16},"name":"overlap","qualname":"::gfa::Containment::overlap","value":"bstr::BString","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1456},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31986,"byte_end":31994,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Containment::optional","value":"T","parent":{"krate":0,"index":1447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32294,"byte_end":32298,"line_start":180,"line_end":180,"column_start":12,"column_end":16},"name":"Path","qualname":"::gfa::Path","value":"Path { path_name, segment_names, overlaps, optional }","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588}],"decl_id":null,"docs":" The step list that the path actually consists of is an unparsed\n BString to keep memory down; use path.iter() to get an iterator\n over the parsed path segments and orientations.\n","sig":null,"attributes":[{"value":"/ The step list that the path actually consists of is an unparsed","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32002,"byte_end":32069,"line_start":174,"line_end":174,"column_start":1,"column_end":68}},{"value":"/ BString to keep memory down; use path.iter() to get an iterator","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32070,"byte_end":32137,"line_start":175,"line_end":175,"column_start":1,"column_end":68}},{"value":"/ over the parsed path segments and orientations.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32138,"byte_end":32189,"line_start":176,"line_end":176,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32326,"byte_end":32335,"line_start":181,"line_end":181,"column_start":9,"column_end":18},"name":"path_name","qualname":"::gfa::Path::path_name","value":"bstr::BString","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32354,"byte_end":32367,"line_start":182,"line_end":182,"column_start":9,"column_end":22},"name":"segment_names","qualname":"::gfa::Path::segment_names","value":"bstr::BString","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32386,"byte_end":32394,"line_start":183,"line_end":183,"column_start":9,"column_end":17},"name":"overlaps","qualname":"::gfa::Path::overlaps","value":"std::vec::Vec<std::option::Option<cigar::CIGAR>>","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1587},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32424,"byte_end":32432,"line_start":184,"line_end":184,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Path::optional","value":"T","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32546,"byte_end":32549,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<N, T>>::new","value":"pub fn new(BString, BString, Vec<Option<CIGAR>>, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33597,"byte_end":33601,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path<BString, T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the segments of the given path,\n parsing the orientation and producing a slice to each segment\n name\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the segments of the given path,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33441,"byte_end":33502,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/ parsing the orientation and producing a slice to each segment","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33507,"byte_end":33572,"line_start":223,"line_end":223,"column_start":5,"column_end":70}},{"value":"/ name","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33577,"byte_end":33585,"line_start":224,"line_end":224,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34246,"byte_end":34250,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path<usize, T>>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the usize segments of the given\n path.\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the usize segments of the given","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34159,"byte_end":34220,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/ path.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34225,"byte_end":34234,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"optfields","qualname":"::optfields","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":1701},{"krate":0,"index":1721},{"krate":0,"index":1719},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1705},{"krate":0,"index":1723},{"krate":0,"index":1760},{"krate":0,"index":1758},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1748},{"krate":0,"index":336},{"krate":0,"index":356},{"krate":0,"index":359},{"krate":0,"index":364},{"krate":0,"index":369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53907,"byte_end":53921,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"OptionalFields","qualname":"::optfields::OptionalFields","value":"Vec<OptField>","parent":null,"children":[],"decl_id":null,"docs":" These type aliases are useful for configuring the parsers, as the\n type of the optional field container must be given when creating a\n GFAParser or GFA object.\n","sig":null,"attributes":[{"value":"/ These type aliases are useful for configuring the parsers, as the","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53728,"byte_end":53797,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ type of the optional field container must be given when creating a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53798,"byte_end":53868,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ GFAParser or GFA object.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53869,"byte_end":53897,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53948,"byte_end":53964,"line_start":10,"line_end":10,"column_start":10,"column_end":26},"name":"NoOptionalFields","qualname":"::optfields::NoOptionalFields","value":"()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54147,"byte_end":54155,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"OptField","qualname":"::optfields::OptField","value":"OptField { tag, value }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1704}],"decl_id":null,"docs":" An optional field a la SAM. Identified by its tag, which is any\n two characters matching [A-Za-z][A-Za-z0-9].\n","sig":null,"attributes":[{"value":"/ An optional field a la SAM. Identified by its tag, which is any","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":53972,"byte_end":54039,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ two characters matching [A-Za-z][A-Za-z0-9].","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54040,"byte_end":54088,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54166,"byte_end":54169,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"tag","qualname":"::optfields::OptField::tag","value":"[u8; 2]","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1704},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54188,"byte_end":54193,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"value","qualname":"::optfields::OptField::value","value":"optfields::OptFieldVal","parent":{"krate":0,"index":1701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54532,"byte_end":54533,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"A","qualname":"::optfields::OptFieldVal::A","value":"OptFieldVal::A(u8)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54543,"byte_end":54546,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Int","qualname":"::optfields::OptFieldVal::Int","value":"OptFieldVal::Int(i64)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54557,"byte_end":54562,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::optfields::OptFieldVal::Float","value":"OptFieldVal::Float(f32)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54573,"byte_end":54574,"line_start":29,"line_end":29,"column_start":5,"column_end":6},"name":"Z","qualname":"::optfields::OptFieldVal::Z","value":"OptFieldVal::Z(BString)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54589,"byte_end":54590,"line_start":30,"line_end":30,"column_start":5,"column_end":6},"name":"J","qualname":"::optfields::OptFieldVal::J","value":"OptFieldVal::J(BString)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54605,"byte_end":54606,"line_start":31,"line_end":31,"column_start":5,"column_end":6},"name":"H","qualname":"::optfields::OptFieldVal::H","value":"OptFieldVal::H(Vec<u32>)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54622,"byte_end":54626,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"BInt","qualname":"::optfields::OptFieldVal::BInt","value":"OptFieldVal::BInt(Vec<i64>)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54642,"byte_end":54648,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"BFloat","qualname":"::optfields::OptFieldVal::BFloat","value":"OptFieldVal::BFloat(Vec<f32>)","parent":{"krate":0,"index":1723},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1723},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54514,"byte_end":54525,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"name":"OptFieldVal","qualname":"::optfields::OptFieldVal","value":"pub enum OptFieldVal {\n    A(u8),\n    Int(i64),\n    Float(f32),\n    Z(BString),\n    J(BString),\n    H(Vec<u32>),\n    BInt(Vec<i64>),\n    BFloat(Vec<f32>),\n}","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":1745}],"decl_id":null,"docs":" enum for representing each of the SAM optional field types. The\n `B` type, which denotes either an integer or float array, is split\n in two variants, and they ignore the size modifiers in the spec,\n instead always holding i64 or f32.\n","sig":null,"attributes":[{"value":"/ enum for representing each of the SAM optional field types. The","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54211,"byte_end":54278,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ `B` type, which denotes either an integer or float array, is split","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54279,"byte_end":54349,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ in two variants, and they ignore the size modifiers in the spec,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54350,"byte_end":54418,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ instead always holding i64 or f32.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54419,"byte_end":54457,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54778,"byte_end":54781,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"tag","qualname":"<OptField>::tag","value":"pub fn tag(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Panics if the provided tag doesn't match the regex\n [A-Za-z][A-Za-z0-9].\n","sig":null,"attributes":[{"value":"/ Panics if the provided tag doesn't match the regex","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54683,"byte_end":54737,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"/ [A-Za-z][A-Za-z0-9].","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54742,"byte_end":54766,"line_start":38,"line_end":38,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55126,"byte_end":55129,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<OptField>::new","value":"pub fn new(&[u8], OptFieldVal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new OptField from a tag name and a value, panicking\n if the provided tag doesn't fulfill the requirements of\n OptField::tag().\n","sig":null,"attributes":[{"value":"/ Create a new OptField from a tag name and a value, panicking","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54961,"byte_end":55025,"line_start":46,"line_end":46,"column_start":5,"column_end":69}},{"value":"/ if the provided tag doesn't fulfill the requirements of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55030,"byte_end":55089,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/ OptField::tag().","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55094,"byte_end":55114,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55354,"byte_end":55359,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"parse","qualname":"<OptField>::parse","value":"pub fn parse(&[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses an optional field from a bytestring in the format\n <TAG>:<TYPE>:<VALUE>\n","sig":null,"attributes":[{"value":"/ Parses an optional field from a bytestring in the format","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55253,"byte_end":55313,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/ <TAG>:<TYPE>:<VALUE>","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":55318,"byte_end":55342,"line_start":55,"line_end":55,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59431,"byte_end":59440,"line_start":172,"line_end":172,"column_start":11,"column_end":20},"name":"OptFields","qualname":"::optfields::OptFields","value":"OptFields: Sized + Default + Clone","parent":null,"children":[{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" The OptFields trait describes how to parse, store, and query\n optional fields. Each of the GFA line types and the GFA struct\n itself are generic over the optional fields, so the choice of\n OptFields implementor can impact memory usage, which optional\n fields are parsed, and possibly more in the future\n","sig":null,"attributes":[{"value":"/ The OptFields trait describes how to parse, store, and query","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59102,"byte_end":59166,"line_start":167,"line_end":167,"column_start":1,"column_end":65}},{"value":"/ optional fields. Each of the GFA line types and the GFA struct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59167,"byte_end":59233,"line_start":168,"line_end":168,"column_start":1,"column_end":67}},{"value":"/ itself are generic over the optional fields, so the choice of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59234,"byte_end":59299,"line_start":169,"line_end":169,"column_start":1,"column_end":66}},{"value":"/ OptFields implementor can impact memory usage, which optional","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59300,"byte_end":59365,"line_start":170,"line_end":170,"column_start":1,"column_end":66}},{"value":"/ fields are parsed, and possibly more in the future","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59366,"byte_end":59420,"line_start":171,"line_end":171,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59543,"byte_end":59552,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"get_field","qualname":"::optfields::OptFields::get_field","value":"pub fn get_field(&Self, &[u8]) -> Option<&OptField>","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Return the optional field with the given tag, if it exists.\n","sig":null,"attributes":[{"value":"/ Return the optional field with the given tag, if it exists.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59472,"byte_end":59535,"line_start":173,"line_end":173,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59731,"byte_end":59737,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"fields","qualname":"::optfields::OptFields::fields","value":"pub fn fields(&Self) -> &[OptField]","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Return a slice over all optional fields. NB: This may be\n replaced by an iterator or something else in the future\n","sig":null,"attributes":[{"value":"/ Return a slice over all optional fields. NB: This may be","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59599,"byte_end":59659,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/ replaced by an iterator or something else in the future","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59664,"byte_end":59723,"line_start":177,"line_end":177,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":60087,"byte_end":60092,"line_start":185,"line_end":185,"column_start":8,"column_end":13},"name":"parse","qualname":"::optfields::OptFields::parse","value":"pub fn parse<T>(T) -> Self where T: IntoIterator, T::Item: AsRef<[u8]>","parent":{"krate":0,"index":359},"children":[],"decl_id":null,"docs":" Given an iterator over bytestrings, each expected to hold one\n optional field (in the <TAG>:<TYPE>:<VALUE> format), parse\n them as optional fields to create a collection. Returns `Self`\n rather than `Option<Self>` for now, but this may be changed to\n become fallible in the future.\n","sig":null,"attributes":[{"value":"/ Given an iterator over bytestrings, each expected to hold one","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59766,"byte_end":59831,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/ optional field (in the <TAG>:<TYPE>:<VALUE> format), parse","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59836,"byte_end":59898,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ them as optional fields to create a collection. Returns `Self`","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59903,"byte_end":59969,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/ rather than `Option<Self>` for now, but this may be changed to","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59974,"byte_end":60040,"line_start":183,"line_end":183,"column_start":5,"column_end":71}},{"value":"/ become fallible in the future.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":60045,"byte_end":60079,"line_start":184,"line_end":184,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":2050},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":441},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":491},{"krate":0,"index":497},{"krate":0,"index":503}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::parser::error","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":1828},{"krate":0,"index":1838},{"krate":0,"index":1836},{"krate":0,"index":1835},{"krate":0,"index":387},{"krate":0,"index":1840},{"krate":0,"index":1858},{"krate":0,"index":1856},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":1866},{"krate":0,"index":1883},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76347,"byte_end":76361,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"GFAFieldResult","qualname":"::parser::error::GFAFieldResult","value":"Result<T, ParseFieldError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76404,"byte_end":76413,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"GFAResult","qualname":"::parser::error::GFAResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76504,"byte_end":76513,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"IgnoreAll","qualname":"::parser::error::ParserTolerance::IgnoreAll","value":"ParserTolerance::IgnoreAll","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76519,"byte_end":76523,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Safe","qualname":"::parser::error::ParserTolerance::Safe","value":"ParserTolerance::Safe","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1833},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76529,"byte_end":76537,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Pedantic","qualname":"::parser::error::ParserTolerance::Pedantic","value":"ParserTolerance::Pedantic","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76482,"byte_end":76497,"line_start":9,"line_end":9,"column_start":10,"column_end":25},"name":"ParserTolerance","qualname":"::parser::error::ParserTolerance","value":"pub enum ParserTolerance { IgnoreAll, Safe, Pedantic, }","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76794,"byte_end":76805,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"UintIdError","qualname":"::parser::error::ParseFieldError::UintIdError","value":"ParseFieldError::UintIdError","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" A segment ID couldn't be parsed as a u64. Can only happen\n when parsing into a GFA<u64, T>.\n","sig":null,"attributes":[{"value":"/ A segment ID couldn't be parsed as a u64. Can only happen","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76687,"byte_end":76748,"line_start":23,"line_end":23,"column_start":5,"column_end":66}},{"value":"/ when parsing into a GFA<u64, T>.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76753,"byte_end":76789,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76918,"byte_end":76927,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::parser::error::ParseFieldError::Utf8Error","value":"ParseFieldError::Utf8Error","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" A bytestring couldn't be parsed as a bytestring, can happen\n when the contents aren't UTF8.\n","sig":null,"attributes":[{"value":"/ A bytestring couldn't be parsed as a bytestring, can happen","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76811,"byte_end":76874,"line_start":26,"line_end":26,"column_start":5,"column_end":68}},{"value":"/ when the contents aren't UTF8.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76879,"byte_end":76913,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76990,"byte_end":77010,"line_start":30,"line_end":30,"column_start":5,"column_end":25},"name":"ParseFromStringError","qualname":"::parser::error::ParseFieldError::ParseFromStringError","value":"ParseFieldError::ParseFromStringError","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" A field couldn't be parsed into the correct type\n","sig":null,"attributes":[{"value":"/ A field couldn't be parsed into the correct type","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76933,"byte_end":76985,"line_start":29,"line_end":29,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77078,"byte_end":77094,"line_start":32,"line_end":32,"column_start":5,"column_end":21},"name":"OrientationError","qualname":"::parser::error::ParseFieldError::OrientationError","value":"ParseFieldError::OrientationError","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" Attempted to parse an orientation that wasn't + or -.\n","sig":null,"attributes":[{"value":"/ Attempted to parse an orientation that wasn't + or -.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77016,"byte_end":77073,"line_start":31,"line_end":31,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1849},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77213,"byte_end":77225,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"name":"InvalidField","qualname":"::parser::error::ParseFieldError::InvalidField","value":"ParseFieldError::InvalidField(&'static str)","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" A required field was incorrectly formatted. Includes the field\n name as defined by the GFA1 spec.\n","sig":null,"attributes":[{"value":"/ A required field was incorrectly formatted. Includes the field","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77100,"byte_end":77166,"line_start":33,"line_end":33,"column_start":5,"column_end":71}},{"value":"/ name as defined by the GFA1 spec.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77171,"byte_end":77208,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77245,"byte_end":77258,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"MissingFields","qualname":"::parser::error::ParseFieldError::MissingFields","value":"ParseFieldError::MissingFields","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77264,"byte_end":77271,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::parser::error::ParseFieldError::Unknown","value":"ParseFieldError::Unknown","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1840},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76665,"byte_end":76680,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"name":"ParseFieldError","qualname":"::parser::error::ParseFieldError","value":"pub enum ParseFieldError {\n\n    /// A segment ID couldn't be parsed as a u64. Can only happen\n    /// when parsing into a GFA<u64, T>.\n    UintIdError,\n\n    /// A bytestring couldn't be parsed as a bytestring, can happen\n    /// when the contents aren't UTF8.\n    Utf8Error,\n\n    /// A field couldn't be parsed into the correct type\n    ParseFromStringError,\n\n    /// Attempted to parse an orientation that wasn't + or -.\n    OrientationError,\n\n    /// A required field was incorrectly formatted. Includes the field\n    /// name as defined by the GFA1 spec.\n    InvalidField(&'static str),\n    MissingFields,\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1854}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1867},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79182,"byte_end":79197,"line_start":99,"line_end":99,"column_start":5,"column_end":20},"name":"UnknownLineType","qualname":"::parser::error::ParseError::UnknownLineType","value":"ParseError::UnknownLineType","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" The line type was something other than 'H', 'S', 'L', 'C', or\n 'P'. This is ignored by the file parser rather than a fail\n condition.\n","sig":null,"attributes":[{"value":"/ The line type was something other than 'H', 'S', 'L', 'C', or","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79026,"byte_end":79091,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ 'P'. This is ignored by the file parser rather than a fail","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79096,"byte_end":79158,"line_start":97,"line_end":97,"column_start":5,"column_end":67}},{"value":"/ condition.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79163,"byte_end":79177,"line_start":98,"line_end":98,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79257,"byte_end":79266,"line_start":101,"line_end":101,"column_start":5,"column_end":14},"name":"EmptyLine","qualname":"::parser::error::ParseError::EmptyLine","value":"ParseError::EmptyLine","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Tried to parse an empty line. Can be ignored.\n","sig":null,"attributes":[{"value":"/ Tried to parse an empty line. Can be ignored.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79203,"byte_end":79252,"line_start":100,"line_end":100,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79377,"byte_end":79388,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"InvalidLine","qualname":"::parser::error::ParseError::InvalidLine","value":"ParseError::InvalidLine(ParseFieldError, String)","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" A line couldn't be parsed. Includes the problem line and a\n variant describing the error.\n","sig":null,"attributes":[{"value":"/ A line couldn't be parsed. Includes the problem line and a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79272,"byte_end":79334,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"/ variant describing the error.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79339,"byte_end":79372,"line_start":103,"line_end":103,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79454,"byte_end":79466,"line_start":106,"line_end":106,"column_start":5,"column_end":17},"name":"InvalidField","qualname":"::parser::error::ParseError::InvalidField","value":"ParseError::InvalidField(ParseFieldError)","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" A field couldn't be parsed\n","sig":null,"attributes":[{"value":"/ A field couldn't be parsed","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79419,"byte_end":79449,"line_start":105,"line_end":105,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79522,"byte_end":79529,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"IOError","qualname":"::parser::error::ParseError::IOError","value":"ParseError::IOError(std::io::Error)","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Wrapper for an IO error.\n","sig":null,"attributes":[{"value":"/ Wrapper for an IO error.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79489,"byte_end":79517,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79551,"byte_end":79558,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::parser::error::ParseError::Unknown","value":"ParseError::Unknown","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79009,"byte_end":79019,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parser::error::ParseError","value":"pub enum ParseError {\n\n    /// The line type was something other than 'H', 'S', 'L', 'C', or\n    /// 'P'. This is ignored by the file parser rather than a fail\n    /// condition.\n    UnknownLineType,\n\n    /// Tried to parse an empty line. Can be ignored.\n    EmptyLine,\n\n    /// A line couldn't be parsed. Includes the problem line and a\n    /// variant describing the error.\n    InvalidLine(ParseFieldError, String),\n\n    /// A field couldn't be parsed\n    InvalidField(ParseFieldError),\n\n    /// Wrapper for an IO error.\n    IOError(std::io::Error),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1881}],"decl_id":null,"docs":" Type encapsulating different kinds of GFA parsing errors\n","sig":null,"attributes":[{"value":"/ Type encapsulating different kinds of GFA parsing errors","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":78922,"byte_end":78982,"line_start":93,"line_end":93,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61622,"byte_end":61638,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"GFAParserBuilder","qualname":"::parser::GFAParserBuilder","value":"GFAParserBuilder { segments, links, containments, paths, tolerance }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"decl_id":null,"docs":" Builder struct for GFAParsers\n","sig":null,"attributes":[{"value":"/ Builder struct for GFAParsers","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61577,"byte_end":61610,"line_start":13,"line_end":13,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61649,"byte_end":61657,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"segments","qualname":"::parser::GFAParserBuilder::segments","value":"bool","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61673,"byte_end":61678,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"links","qualname":"::parser::GFAParserBuilder::links","value":"bool","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61694,"byte_end":61706,"line_start":17,"line_end":17,"column_start":9,"column_end":21},"name":"containments","qualname":"::parser::GFAParserBuilder::containments","value":"bool","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61722,"byte_end":61727,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"paths","qualname":"::parser::GFAParserBuilder::paths","value":"bool","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61743,"byte_end":61752,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"tolerance","qualname":"::parser::GFAParserBuilder::tolerance","value":"parser::error::ParserTolerance","parent":{"krate":0,"index":422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61885,"byte_end":61889,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"none","qualname":"<GFAParserBuilder>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse no GFA lines, useful if you only want to parse one line type.\n","sig":null,"attributes":[{"value":"/ Parse no GFA lines, useful if you only want to parse one line type.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61802,"byte_end":61873,"line_start":23,"line_end":23,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62143,"byte_end":62146,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"all","qualname":"<GFAParserBuilder>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse all GFA lines.\n","sig":null,"attributes":[{"value":"/ Parse all GFA lines.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62107,"byte_end":62131,"line_start":34,"line_end":34,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62367,"byte_end":62380,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"ignore_errors","qualname":"<GFAParserBuilder>::ignore_errors","value":"pub fn ignore_errors(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62485,"byte_end":62503,"line_start":50,"line_end":50,"column_start":12,"column_end":30},"name":"ignore_safe_errors","qualname":"<GFAParserBuilder>::ignore_safe_errors","value":"pub fn ignore_safe_errors(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62603,"byte_end":62618,"line_start":55,"line_end":55,"column_start":12,"column_end":27},"name":"pedantic_errors","qualname":"<GFAParserBuilder>::pedantic_errors","value":"pub fn pedantic_errors(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":62722,"byte_end":62727,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"build","qualname":"<GFAParserBuilder>::build","value":"pub fn build<N: SegmentId, T: OptFields>(Self) -> GFAParser<N, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63124,"byte_end":63138,"line_start":72,"line_end":72,"column_start":12,"column_end":26},"name":"build_usize_id","qualname":"<GFAParserBuilder>::build_usize_id","value":"pub fn build_usize_id<T: OptFields>(Self) -> GFAParser<usize, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63223,"byte_end":63236,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"build_bstr_id","qualname":"<GFAParserBuilder>::build_bstr_id","value":"pub fn build_bstr_id<T: OptFields>(Self) -> GFAParser<BString, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63325,"byte_end":63334,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"GFAParser","qualname":"::parser::GFAParser","value":"GFAParser {  }","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63940,"byte_end":63943,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<GFAParser<N, T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new GFAParser that will parse all four GFA line\n types, and use the optional fields parser and storage `T`.\n","sig":null,"attributes":[{"value":"/ Create a new GFAParser that will parse all four GFA line","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63801,"byte_end":63861,"line_start":99,"line_end":99,"column_start":5,"column_end":65}},{"value":"/ types, and use the optional fields parser and storage `T`.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63866,"byte_end":63928,"line_start":100,"line_end":100,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":64001,"byte_end":64015,"line_start":105,"line_end":105,"column_start":12,"column_end":26},"name":"parse_gfa_line","qualname":"<GFAParser<N, T>>::parse_gfa_line","value":"pub fn parse_gfa_line(&Self, &[u8]) -> GFAResult<Line<N, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":64952,"byte_end":64963,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"parse_lines","qualname":"<GFAParser<N, T>>::parse_lines","value":"pub fn parse_lines<I>(&Self, I) -> GFAResult<GFA<N, T>> where I: Iterator,\nI::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":65429,"byte_end":65439,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"parse_file","qualname":"<GFAParser<N, T>>::parse_file","value":"pub fn parse_file<P: AsRef<std::path::Path>>(&Self, P)\n-> Result<GFA<N, T>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\writer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\writer.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\writer.rs","byte_start":83462,"byte_end":83471,"line_start":81,"line_end":81,"column_start":8,"column_end":17},"name":"write_gfa","qualname":"::writer::write_gfa","value":"pub fn write_gfa<N: Display, T: Write, U: OptFields>(&GFA<N, U>, &mut T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\writer.rs","byte_start":83972,"byte_end":83982,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"gfa_string","qualname":"::writer::gfa_string","value":"pub fn gfa_string(&GFA<BString, OptionalFields>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":508,"byte_end":515,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1883,"byte_end":1890,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2080,"byte_end":2087,"line_start":104,"line_end":104,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2679,"byte_end":2688,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3733,"byte_end":3742,"line_start":182,"line_end":182,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3949,"byte_end":3958,"line_start":194,"line_end":194,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":4364,"byte_end":4369,"line_start":217,"line_end":217,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":62},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":9256,"byte_end":9261,"line_start":367,"line_end":367,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13364,"byte_end":13367,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14380,"byte_end":14387,"line_start":68,"line_end":68,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14789,"byte_end":14796,"line_start":83,"line_end":83,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16612,"byte_end":16619,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17175,"byte_end":17182,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":18125,"byte_end":18128,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":37765,"byte_end":37778,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39106,"byte_end":39113,"line_start":110,"line_end":110,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49944,"byte_end":49955,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51490,"byte_end":51501,"line_start":70,"line_end":70,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51815,"byte_end":51826,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":52005,"byte_end":52016,"line_start":93,"line_end":93,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":52334,"byte_end":52345,"line_start":103,"line_end":103,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":53316,"byte_end":53323,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28224,"byte_end":28227,"line_start":46,"line_end":46,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29877,"byte_end":29880,"line_start":87,"line_end":87,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30157,"byte_end":30163,"line_start":100,"line_end":100,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30652,"byte_end":30659,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31205,"byte_end":31209,"line_start":142,"line_end":142,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32522,"byte_end":32526,"line_start":188,"line_end":188,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32901,"byte_end":32905,"line_start":205,"line_end":205,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33418,"byte_end":33422,"line_start":221,"line_end":221,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34138,"byte_end":34142,"line_start":242,"line_end":242,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34468,"byte_end":34475,"line_start":254,"line_end":254,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34742,"byte_end":34746,"line_start":264,"line_end":264,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":35139,"byte_end":35150,"line_start":277,"line_end":277,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54668,"byte_end":54676,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":58039,"byte_end":58047,"line_start":130,"line_end":130,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":60855,"byte_end":60858,"line_start":215,"line_end":215,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76559,"byte_end":76574,"line_start":15,"line_end":15,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77949,"byte_end":77964,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":78902,"byte_end":78917,"line_start":91,"line_end":91,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79585,"byte_end":79595,"line_start":112,"line_end":112,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80357,"byte_end":80367,"line_start":132,"line_end":132,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80480,"byte_end":80490,"line_start":138,"line_end":138,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80600,"byte_end":80610,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80620,"byte_end":80630,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61779,"byte_end":61795,"line_start":22,"line_end":22,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63623,"byte_end":63632,"line_start":91,"line_end":91,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63779,"byte_end":63788,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":66569,"byte_end":66575,"line_start":193,"line_end":193,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":67612,"byte_end":67619,"line_start":235,"line_end":235,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":68126,"byte_end":68130,"line_start":258,"line_end":258,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":68898,"byte_end":68909,"line_start":289,"line_end":289,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":69841,"byte_end":69845,"line_start":326,"line_end":326,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":8,"byte_end":13,"line_start":1,"line_end":1,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":23,"byte_end":29,"line_start":2,"line_end":2,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":90}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":39,"byte_end":42,"line_start":3,"line_end":3,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":149}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":26980,"byte_end":26995,"line_start":1,"line_end":1,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":150}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27005,"byte_end":27016,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":213}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":27026,"byte_end":27032,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":238}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":52,"byte_end":61,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":328}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":71,"byte_end":77,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":377}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61301,"byte_end":61306,"line_start":1,"line_end":1,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":378}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\lib.rs","byte_start":87,"byte_end":93,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":511}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":508,"byte_end":515,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":1883,"byte_end":1890,"line_start":97,"line_end":97,"column_start":28,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2080,"byte_end":2087,"line_start":104,"line_end":104,"column_start":28,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":547},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":2679,"byte_end":2688,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3733,"byte_end":3742,"line_start":182,"line_end":182,"column_start":20,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":3949,"byte_end":3958,"line_start":194,"line_end":194,"column_start":28,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":656},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":4364,"byte_end":4369,"line_start":217,"line_end":217,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\cigar.rs","byte_start":9256,"byte_end":9261,"line_start":367,"line_end":367,"column_start":28,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":725},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":13364,"byte_end":13367,"line_start":27,"line_end":27,"column_start":32,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14380,"byte_end":14387,"line_start":68,"line_end":68,"column_start":18,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":802},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":14789,"byte_end":14796,"line_start":83,"line_end":83,"column_start":6,"column_end":13},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":16612,"byte_end":16619,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":17175,"byte_end":17182,"line_start":157,"line_end":157,"column_start":18,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":821},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gafpaf.rs","byte_start":18125,"byte_end":18128,"line_start":189,"line_end":189,"column_start":32,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":37765,"byte_end":37778,"line_start":57,"line_end":57,"column_start":6,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\name_conversion.rs","byte_start":39106,"byte_end":39113,"line_start":110,"line_end":110,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":49944,"byte_end":49955,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51490,"byte_end":51501,"line_start":70,"line_end":70,"column_start":18,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":51815,"byte_end":51826,"line_start":86,"line_end":86,"column_start":6,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":52005,"byte_end":52016,"line_start":93,"line_end":93,"column_start":28,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\orientation.rs","byte_start":52334,"byte_end":52345,"line_start":103,"line_end":103,"column_start":28,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":971},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52722,"byte_end":52727,"line_start":9,"line_end":9,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":52730,"byte_end":52737,"line_start":9,"line_end":9,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa\\traits.rs","byte_start":53316,"byte_end":53323,"line_start":32,"line_end":32,"column_start":20,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":26,"index":1037},"to":{"krate":0,"index":245}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":28224,"byte_end":28227,"line_start":46,"line_end":46,"column_start":23,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":29877,"byte_end":29880,"line_start":87,"line_end":87,"column_start":34,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30157,"byte_end":30163,"line_start":100,"line_end":100,"column_start":32,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":30652,"byte_end":30659,"line_start":120,"line_end":120,"column_start":20,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":31205,"byte_end":31209,"line_start":142,"line_end":142,"column_start":20,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32522,"byte_end":32526,"line_start":188,"line_end":188,"column_start":34,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":32901,"byte_end":32905,"line_start":205,"line_end":205,"column_start":34,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":33418,"byte_end":33422,"line_start":221,"line_end":221,"column_start":20,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34138,"byte_end":34142,"line_start":242,"line_end":242,"column_start":20,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34468,"byte_end":34475,"line_start":254,"line_end":254,"column_start":23,"column_end":30},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":34742,"byte_end":34746,"line_start":264,"line_end":264,"column_start":23,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\gfa.rs","byte_start":35139,"byte_end":35150,"line_start":277,"line_end":277,"column_start":23,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":54668,"byte_end":54676,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":58039,"byte_end":58047,"line_start":130,"line_end":130,"column_start":28,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1701},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59442,"byte_end":59447,"line_start":172,"line_end":172,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59450,"byte_end":59457,"line_start":172,"line_end":172,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":59460,"byte_end":59465,"line_start":172,"line_end":172,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\optfields.rs","byte_start":60855,"byte_end":60858,"line_start":215,"line_end":215,"column_start":20,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":359}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":76559,"byte_end":76574,"line_start":15,"line_end":15,"column_start":18,"column_end":33},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1828},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":77949,"byte_end":77964,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1840},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":78902,"byte_end":78917,"line_start":91,"line_end":91,"column_start":23,"column_end":38},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1840},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":79585,"byte_end":79595,"line_start":112,"line_end":112,"column_start":23,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80357,"byte_end":80367,"line_start":132,"line_end":132,"column_start":31,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80480,"byte_end":80490,"line_start":138,"line_end":138,"column_start":32,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80600,"byte_end":80610,"line_start":144,"line_end":144,"column_start":23,"column_end":33},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1866},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser\\error.rs","byte_start":80620,"byte_end":80630,"line_start":146,"line_end":146,"column_start":6,"column_end":16},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":61779,"byte_end":61795,"line_start":22,"line_end":22,"column_start":6,"column_end":22},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63623,"byte_end":63632,"line_start":91,"line_end":91,"column_start":46,"column_end":55},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":441},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":63779,"byte_end":63788,"line_start":98,"line_end":98,"column_start":34,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":66569,"byte_end":66575,"line_start":193,"line_end":193,"column_start":20,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":67612,"byte_end":67619,"line_start":235,"line_end":235,"column_start":34,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":68126,"byte_end":68130,"line_start":258,"line_end":258,"column_start":34,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":68898,"byte_end":68909,"line_start":289,"line_end":289,"column_start":34,"column_end":45},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\git\\checkouts\\rs-gfa-7b1fe52c0cff27ae\\6bff126\\src\\parser.rs","byte_start":69841,"byte_end":69845,"line_start":326,"line_end":326,"column_start":34,"column_end":38},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}}]}