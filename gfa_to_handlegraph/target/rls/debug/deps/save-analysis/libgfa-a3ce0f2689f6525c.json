{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0","program":"C:\\Users\\mstie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfa","--edition=2018","C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=a3ce0f2689f6525c","-C","extra-filename=-a3ce0f2689f6525c","--out-dir","d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps","-L","dependency=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps","--extern","bstr=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libbstr-be6018658ca34892.rmeta","--extern","bytemuck=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libbytemuck-980d175be6f59b6b.rmeta","--extern","lazy_static=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\liblazy_static-d2a3d85c36d2e5c0.rmeta","--extern","nom=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libnom-be6ff26545334ec5.rmeta","--extern","regex=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libregex-bf9f4534384ca5ff.rmeta","--extern","serde=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libserde-b478a317e6b8f1a0.rmeta","--extern","serde_json=d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libserde_json-7a1c47246fc40556.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\mstie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\GitHub\\STAGE\\gfa_to_handlegraph\\target\\rls\\debug\\deps\\libgfa-a3ce0f2689f6525c.rmeta"},"prelude":{"crate_id":{"name":"gfa","disambiguator":[8381390469329946227,11220046073434949803]},"crate_root":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src","external_crates":[{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":14,"id":{"name":"bstr","disambiguator":[5225874498542606662,11869065021348144871]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":15,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":16,"id":{"name":"memchr","disambiguator":[10217865961661611903,12425849656899133429]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":17,"id":{"name":"regex_automata","disambiguator":[16393786523963514745,1579492795500074724]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":18,"id":{"name":"byteorder","disambiguator":[18240813998462569790,69349113415247948]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":19,"id":{"name":"serde","disambiguator":[12142570869610062187,11840381097694643382]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":20,"id":{"name":"serde_derive","disambiguator":[7010327342444808478,12112623561000368160]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":21,"id":{"name":"nom","disambiguator":[9091223357539613525,13507357270493758415]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":22,"id":{"name":"lexical_core","disambiguator":[16530379538302040642,6855246276856095009]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":23,"id":{"name":"bitflags","disambiguator":[4688005250658642750,16420404072416628965]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":24,"id":{"name":"cfg_if","disambiguator":[3734860209140798689,14506924879911982731]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":25,"id":{"name":"static_assertions","disambiguator":[1001455674286075304,1351961817227295928]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":26,"id":{"name":"arrayvec","disambiguator":[7414188231847043775,4675930894621384222]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","num":27,"id":{"name":"ryu","disambiguator":[15102016992269480173,8714734155128650866]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":28,"id":{"name":"regex","disambiguator":[16708230686113223120,2504657980424758453]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":29,"id":{"name":"aho_corasick","disambiguator":[3965871490860746457,13775883191149742722]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":30,"id":{"name":"regex_syntax","disambiguator":[15691710534566068493,2760826650586284119]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","num":31,"id":{"name":"thread_local","disambiguator":[8502248513495985700,10971054996155022084]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","num":32,"id":{"name":"serde_json","disambiguator":[323418312460347939,4093881280337936323]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","num":33,"id":{"name":"itoa","disambiguator":[14607357783814654536,3581029441771282690]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","num":34,"id":{"name":"bytemuck","disambiguator":[580299127335578643,13511358642238060011]}},{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","num":35,"id":{"name":"bytemuck_derive","disambiguator":[12924882944875779174,10806906849248056671]}}],"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":108,"line_start":1,"line_end":6,"column_start":1,"column_end":16}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":0,"byte_end":108,"line_start":1,"line_end":6,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":137},{"krate":0,"index":250},{"krate":0,"index":314},{"krate":0,"index":368},{"krate":0,"index":475}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gafpaf","qualname":"::gafpaf","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":509},{"krate":0,"index":531},{"krate":0,"index":528},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":16},{"krate":0,"index":534},{"krate":0,"index":551},{"krate":0,"index":549},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":19},{"krate":0,"index":23},{"krate":0,"index":553},{"krate":0,"index":566},{"krate":0,"index":564},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":41},{"krate":0,"index":49},{"krate":0,"index":568},{"krate":0,"index":584},{"krate":0,"index":581},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":587},{"krate":0,"index":628},{"krate":0,"index":627},{"krate":0,"index":625},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":617},{"krate":0,"index":615},{"krate":0,"index":66},{"krate":0,"index":630},{"krate":0,"index":651},{"krate":0,"index":650},{"krate":0,"index":648},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":635},{"krate":0,"index":633},{"krate":0,"index":70},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":653},{"krate":0,"index":675},{"krate":0,"index":673},{"krate":0,"index":671},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":658},{"krate":0,"index":656},{"krate":0,"index":94},{"krate":0,"index":135}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":501,"byte_end":504,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"GAF","qualname":"::gafpaf::GAF","value":"GAF { seq_name, seq_len, seq_range, strand, path, path_len, path_range, residue_matches, block_length, quality, optional }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"decl_id":null,"docs":" A GAF record, with optional fields T. Can be created by using\n `parse_gaf`, and the Display implementation produces\n spec-compliant tab-delimited output.\n","sig":null,"attributes":[{"value":"/ A GAF record, with optional fields T. Can be created by using","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":291,"byte_end":356,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"/ `parse_gaf`, and the Display implementation produces","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":357,"byte_end":413,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ spec-compliant tab-delimited output.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":414,"byte_end":454,"line_start":13,"line_end":13,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":529,"byte_end":537,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"seq_name","qualname":"::gafpaf::GAF::seq_name","value":"bstr::BString","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":556,"byte_end":563,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"seq_len","qualname":"::gafpaf::GAF::seq_len","value":"usize","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":580,"byte_end":589,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"seq_range","qualname":"::gafpaf::GAF::seq_range","value":"(usize, usize)","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":615,"byte_end":621,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"strand","qualname":"::gafpaf::GAF::strand","value":"gfa::Orientation","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":644,"byte_end":648,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"path","qualname":"::gafpaf::GAF::path","value":"gafpaf::GAFPath","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":667,"byte_end":675,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"path_len","qualname":"::gafpaf::GAF::path_len","value":"usize","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":692,"byte_end":702,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"name":"path_range","qualname":"::gafpaf::GAF::path_range","value":"(usize, usize)","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":728,"byte_end":743,"line_start":23,"line_end":23,"column_start":9,"column_end":24},"name":"residue_matches","qualname":"::gafpaf::GAF::residue_matches","value":"usize","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":760,"byte_end":772,"line_start":24,"line_end":24,"column_start":9,"column_end":21},"name":"block_length","qualname":"::gafpaf::GAF::block_length","value":"usize","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":789,"byte_end":796,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"quality","qualname":"::gafpaf::GAF::quality","value":"u8","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":810,"byte_end":818,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"optional","qualname":"::gafpaf::GAF::optional","value":"T","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1772,"byte_end":1777,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"SegId","qualname":"::gafpaf::GAFStep::SegId","value":"GAFStep::SegId(Orientation, BString)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1805,"byte_end":1815,"line_start":67,"line_end":67,"column_start":5,"column_end":15},"name":"StableIntv","qualname":"::gafpaf::GAFStep::StableIntv","value":"GAFStep::StableIntv(Orientation, BString, usize, usize)","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1758,"byte_end":1765,"line_start":65,"line_end":65,"column_start":10,"column_end":17},"name":"GAFStep","qualname":"::gafpaf::GAFStep","value":"pub enum GAFStep {\n    SegId(Orientation, BString),\n    StableIntv(Orientation, BString, usize, usize),\n}","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":539}],"decl_id":null,"docs":" enum representing the two kinds of step in a GAF path; either an\n oriented GFA segment ID, or an oriented interval on a stable rGFA\n reference.\n","sig":null,"attributes":[{"value":"/ enum representing the two kinds of step in a GAF path; either an","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1560,"byte_end":1628,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/ oriented GFA segment ID, or an oriented interval on a stable rGFA","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1629,"byte_end":1698,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/ reference.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1699,"byte_end":1713,"line_start":63,"line_end":63,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4116,"byte_end":4124,"line_start":138,"line_end":138,"column_start":5,"column_end":13},"name":"StableId","qualname":"::gafpaf::GAFPath::StableId","value":"GAFPath::StableId(BString)","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4139,"byte_end":4149,"line_start":139,"line_end":139,"column_start":5,"column_end":15},"name":"OrientIntv","qualname":"::gafpaf::GAFPath::OrientIntv","value":"GAFPath::OrientIntv(Vec<GAFStep>)","parent":{"krate":0,"index":553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4102,"byte_end":4109,"line_start":137,"line_end":137,"column_start":10,"column_end":17},"name":"GAFPath","qualname":"::gafpaf::GAFPath","value":"pub enum GAFPath { StableId(BString), OrientIntv(Vec<GAFStep>), }","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":557}],"decl_id":null,"docs":" enum representing the two kinds of GAF path; either the ID of a\n stable rGFA identifier, or a list of oriented steps.\n","sig":null,"attributes":[{"value":"/ enum representing the two kinds of GAF path; either the ID of a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":3707,"byte_end":3774,"line_start":130,"line_end":130,"column_start":1,"column_end":68}},{"value":"/ stable rGFA identifier, or a list of oriented steps.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":3775,"byte_end":3831,"line_start":131,"line_end":131,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5289,"byte_end":5292,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"PAF","qualname":"::gafpaf::PAF","value":"PAF { query_seq_name, query_seq_len, query_seq_range, strand, target_seq_name, target_seq_len, target_seq_range, residue_matches, block_length, quality, optional }","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"decl_id":null,"docs":" A PAF record, with optional fields T. Can be created by using\n `parse_gaf`, and the Display implementation produces\n spec-compliant tab-delimited output.\n","sig":null,"attributes":[{"value":"/ A PAF record, with optional fields T. Can be created by using","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5090,"byte_end":5155,"line_start":175,"line_end":175,"column_start":1,"column_end":66}},{"value":"/ `parse_gaf`, and the Display implementation produces","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5156,"byte_end":5212,"line_start":176,"line_end":176,"column_start":1,"column_end":57}},{"value":"/ spec-compliant tab-delimited output.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5213,"byte_end":5253,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5317,"byte_end":5331,"line_start":180,"line_end":180,"column_start":9,"column_end":23},"name":"query_seq_name","qualname":"::gafpaf::PAF::query_seq_name","value":"bstr::BString","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5350,"byte_end":5363,"line_start":181,"line_end":181,"column_start":9,"column_end":22},"name":"query_seq_len","qualname":"::gafpaf::PAF::query_seq_len","value":"usize","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5380,"byte_end":5395,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"name":"query_seq_range","qualname":"::gafpaf::PAF::query_seq_range","value":"(usize, usize)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5421,"byte_end":5427,"line_start":183,"line_end":183,"column_start":9,"column_end":15},"name":"strand","qualname":"::gafpaf::PAF::strand","value":"gfa::Orientation","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5450,"byte_end":5465,"line_start":184,"line_end":184,"column_start":9,"column_end":24},"name":"target_seq_name","qualname":"::gafpaf::PAF::target_seq_name","value":"bstr::BString","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5484,"byte_end":5498,"line_start":185,"line_end":185,"column_start":9,"column_end":23},"name":"target_seq_len","qualname":"::gafpaf::PAF::target_seq_len","value":"usize","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5515,"byte_end":5531,"line_start":186,"line_end":186,"column_start":9,"column_end":25},"name":"target_seq_range","qualname":"::gafpaf::PAF::target_seq_range","value":"(usize, usize)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5557,"byte_end":5572,"line_start":187,"line_end":187,"column_start":9,"column_end":24},"name":"residue_matches","qualname":"::gafpaf::PAF::residue_matches","value":"usize","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":578},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5589,"byte_end":5601,"line_start":188,"line_end":188,"column_start":9,"column_end":21},"name":"block_length","qualname":"::gafpaf::PAF::block_length","value":"usize","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5618,"byte_end":5625,"line_start":189,"line_end":189,"column_start":9,"column_end":16},"name":"quality","qualname":"::gafpaf::PAF::quality","value":"u8","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5639,"byte_end":5647,"line_start":190,"line_end":190,"column_start":9,"column_end":17},"name":"optional","qualname":"::gafpaf::PAF::optional","value":"T","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":7120,"byte_end":7129,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"parse_paf","qualname":"::gafpaf::parse_paf","value":"pub fn parse_paf<I, T>(I) -> Option<PAF<T>> where I: Iterator,\nI::Item: AsRef<[u8]>, T: OptFields","parent":null,"children":[],"decl_id":null,"docs":" Parse a PAF record from an iterator over the tab-delimited fields\n of bytes\n","sig":null,"attributes":[{"value":"/ Parse a PAF record from an iterator over the tab-delimited fields","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":7030,"byte_end":7099,"line_start":249,"line_end":249,"column_start":1,"column_end":70}},{"value":"/ of bytes","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":7100,"byte_end":7112,"line_start":250,"line_end":250,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8190,"byte_end":8199,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"parse_gaf","qualname":"::gafpaf::parse_gaf","value":"pub fn parse_gaf<I, T>(I) -> Option<GAF<T>> where I: Iterator,\nI::Item: AsRef<[u8]>, T: OptFields","parent":null,"children":[],"decl_id":null,"docs":" Parse a GAF record from an iterator over the tab-delimited fields\n of bytes\n","sig":null,"attributes":[{"value":"/ Parse a GAF record from an iterator over the tab-delimited fields","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8100,"byte_end":8169,"line_start":288,"line_end":288,"column_start":1,"column_end":70}},{"value":"/ of bytes","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8170,"byte_end":8182,"line_start":289,"line_end":289,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8920,"byte_end":8921,"line_start":317,"line_end":317,"column_start":5,"column_end":6},"name":"M","qualname":"::gafpaf::CIGAROp::M","value":"CIGAROp::M","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8931,"byte_end":8932,"line_start":318,"line_end":318,"column_start":5,"column_end":6},"name":"I","qualname":"::gafpaf::CIGAROp::I","value":"CIGAROp::I","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8942,"byte_end":8943,"line_start":319,"line_end":319,"column_start":5,"column_end":6},"name":"D","qualname":"::gafpaf::CIGAROp::D","value":"CIGAROp::D","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8953,"byte_end":8954,"line_start":320,"line_end":320,"column_start":5,"column_end":6},"name":"N","qualname":"::gafpaf::CIGAROp::N","value":"CIGAROp::N","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8964,"byte_end":8965,"line_start":321,"line_end":321,"column_start":5,"column_end":6},"name":"S","qualname":"::gafpaf::CIGAROp::S","value":"CIGAROp::S","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8975,"byte_end":8976,"line_start":322,"line_end":322,"column_start":5,"column_end":6},"name":"H","qualname":"::gafpaf::CIGAROp::H","value":"CIGAROp::H","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8986,"byte_end":8987,"line_start":323,"line_end":323,"column_start":5,"column_end":6},"name":"P","qualname":"::gafpaf::CIGAROp::P","value":"CIGAROp::P","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8997,"byte_end":8998,"line_start":324,"line_end":324,"column_start":5,"column_end":6},"name":"E","qualname":"::gafpaf::CIGAROp::E","value":"CIGAROp::E","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9008,"byte_end":9009,"line_start":325,"line_end":325,"column_start":5,"column_end":6},"name":"X","qualname":"::gafpaf::CIGAROp::X","value":"CIGAROp::X","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8906,"byte_end":8913,"line_start":316,"line_end":316,"column_start":10,"column_end":17},"name":"CIGAROp","qualname":"::gafpaf::CIGAROp","value":"pub enum CIGAROp { M = , I = , D = , N = , S = , H = , P = , E = , X = , }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":8823,"byte_end":8834,"line_start":314,"line_end":314,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":630},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9640,"byte_end":9649,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"CIGARPair","qualname":"::gafpaf::CIGARPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory-efficient representation of a single CIGAR op + length, as\n a u32.\n","sig":null,"attributes":[{"value":"/ A memory-efficient representation of a single CIGAR op + length, as","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9463,"byte_end":9534,"line_start":348,"line_end":348,"column_start":1,"column_end":72}},{"value":"/ a u32.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9535,"byte_end":9545,"line_start":349,"line_end":349,"column_start":1,"column_end":11}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9546,"byte_end":9566,"line_start":350,"line_end":350,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9724,"byte_end":9727,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"new","qualname":"<CIGARPair>::new","value":"pub fn new(u32, CIGAROp) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9914,"byte_end":9917,"line_start":364,"line_end":364,"column_start":12,"column_end":15},"name":"len","qualname":"<CIGARPair>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9972,"byte_end":9974,"line_start":368,"line_end":368,"column_start":12,"column_end":14},"name":"op","qualname":"<CIGARPair>::op","value":"pub fn op(&Self) -> CIGAROp","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10083,"byte_end":10092,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"into_pair","qualname":"<CIGARPair>::into_pair","value":"pub fn into_pair(Self) -> (u32, CIGAROp)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10213,"byte_end":10222,"line_start":379,"line_end":379,"column_start":12,"column_end":21},"name":"from_pair","qualname":"<CIGARPair>::from_pair","value":"pub fn from_pair((u32, CIGAROp)) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11126,"byte_end":11140,"line_start":422,"line_end":422,"column_start":12,"column_end":26},"name":"consumes_query","qualname":"<CIGAROp>::consumes_query","value":"pub fn consumes_query(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11294,"byte_end":11312,"line_start":430,"line_end":430,"column_start":12,"column_end":30},"name":"consumes_reference","qualname":"<CIGAROp>::consumes_reference","value":"pub fn consumes_reference(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11466,"byte_end":11486,"line_start":438,"line_end":438,"column_start":12,"column_end":32},"name":"is_match_or_mismatch","qualname":"<CIGAROp>::is_match_or_mismatch","value":"pub fn is_match_or_mismatch(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":12178,"byte_end":12183,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"name":"CIGAR","qualname":"::gafpaf::CIGAR","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":655},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":12184,"byte_end":12207,"line_start":467,"line_end":467,"column_start":18,"column_end":41},"name":"0","qualname":"::gafpaf::CIGAR::0","value":"std::vec::Vec<(u32, gafpaf::CIGAROp)>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13264,"byte_end":13274,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<CIGAR>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a CIGAR object from an ASCII byte slice\n","sig":null,"attributes":[{"value":"/ Parse a CIGAR object from an ASCII byte slice","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13203,"byte_end":13252,"line_start":503,"line_end":503,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13368,"byte_end":13371,"line_start":508,"line_end":508,"column_start":12,"column_end":15},"name":"len","qualname":"<CIGAR>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13590,"byte_end":13598,"line_start":516,"line_end":516,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CIGAR>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" is_empty corresponds to whether or not the contained vector is\n empty\n","sig":null,"attributes":[{"value":"/ is_empty corresponds to whether or not the contained vector is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13498,"byte_end":13564,"line_start":514,"line_end":514,"column_start":5,"column_end":71}},{"value":"/ empty","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13569,"byte_end":13578,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13816,"byte_end":13820,"line_start":523,"line_end":523,"column_start":12,"column_end":16},"name":"iter","qualname":"<CIGAR>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the individual CIGAR operations in\n the string, e.g. an iterator over \"3M2D\" would produce [M, M,\n M, D, D]\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the individual CIGAR operations in","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13653,"byte_end":13717,"line_start":520,"line_end":520,"column_start":5,"column_end":69}},{"value":"/ the string, e.g. an iterator over \"3M2D\" would produce [M, M,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13722,"byte_end":13787,"line_start":521,"line_end":521,"column_start":5,"column_end":70}},{"value":"/ M, D, D]","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":13792,"byte_end":13804,"line_start":522,"line_end":522,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14320,"byte_end":14325,"line_start":535,"line_end":535,"column_start":12,"column_end":17},"name":"index","qualname":"<CIGAR>::index","value":"pub fn index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Given an index along the cigar string, return a pair of\n indices, where the first is the index to the cigar operation\n in this cigar that includes the given index, and the second is\n the remainder of the index, or the number of operations at the\n index that will be kept\n","sig":null,"attributes":[{"value":"/ Given an index along the cigar string, return a pair of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14006,"byte_end":14065,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/ indices, where the first is the index to the cigar operation","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14070,"byte_end":14134,"line_start":531,"line_end":531,"column_start":5,"column_end":69}},{"value":"/ in this cigar that includes the given index, and the second is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14139,"byte_end":14205,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/ the remainder of the index, or the number of operations at the","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14210,"byte_end":14276,"line_start":533,"line_end":533,"column_start":5,"column_end":71}},{"value":"/ index that will be kept","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14281,"byte_end":14308,"line_start":534,"line_end":534,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":14758,"byte_end":14769,"line_start":549,"line_end":549,"column_start":12,"column_end":23},"name":"query_index","qualname":"<CIGAR>::query_index","value":"pub fn query_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":15348,"byte_end":15357,"line_start":567,"line_end":567,"column_start":12,"column_end":21},"name":"ref_index","qualname":"<CIGAR>::ref_index","value":"pub fn ref_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":15940,"byte_end":15956,"line_start":585,"line_end":585,"column_start":12,"column_end":28},"name":"split_with_index","qualname":"<CIGAR>::split_with_index","value":"pub fn split_with_index(&Self, (usize, usize)) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16598,"byte_end":16606,"line_start":605,"line_end":605,"column_start":12,"column_end":20},"name":"split_at","qualname":"<CIGAR>::split_at","value":"pub fn split_at(&Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split a cigar at the provided index, returning two new cigars;\n e.g. splitting 4M at index 1 produces (1M, 3M); splitting\n 6M3I4D at index 8 produces (6M2I, 1I4D)\n","sig":null,"attributes":[{"value":"/ Split a cigar at the provided index, returning two new cigars;","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16406,"byte_end":16472,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ e.g. splitting 4M at index 1 produces (1M, 3M); splitting","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16477,"byte_end":16538,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ 6M3I4D at index 8 produces (6M2I, 1I4D)","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16543,"byte_end":16586,"line_start":604,"line_end":604,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gfa","qualname":"::gfa","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":1721},{"krate":0,"index":146},{"krate":0,"index":1723},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":699},{"krate":0,"index":747},{"krate":0,"index":743},{"krate":0,"index":739},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":707},{"krate":0,"index":164},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":751},{"krate":0,"index":789},{"krate":0,"index":785},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":769},{"krate":0,"index":793},{"krate":0,"index":820},{"krate":0,"index":817},{"krate":0,"index":814},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":797},{"krate":0,"index":823},{"krate":0,"index":925},{"krate":0,"index":921},{"krate":0,"index":917},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":893},{"krate":0,"index":885},{"krate":0,"index":834},{"krate":0,"index":829},{"krate":0,"index":178},{"krate":0,"index":183},{"krate":0,"index":188},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":929},{"krate":0,"index":1052},{"krate":0,"index":1048},{"krate":0,"index":1044},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1008},{"krate":0,"index":1000},{"krate":0,"index":943},{"krate":0,"index":938},{"krate":0,"index":197},{"krate":0,"index":1056},{"krate":0,"index":1186},{"krate":0,"index":1182},{"krate":0,"index":1178},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1138},{"krate":0,"index":1130},{"krate":0,"index":1071},{"krate":0,"index":1066},{"krate":0,"index":201},{"krate":0,"index":1190},{"krate":0,"index":1306},{"krate":0,"index":1302},{"krate":0,"index":1298},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1266},{"krate":0,"index":1258},{"krate":0,"index":1203},{"krate":0,"index":1198},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":213},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":1310},{"krate":0,"index":1371},{"krate":0,"index":1369},{"krate":0,"index":1368},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1363},{"krate":0,"index":1357},{"krate":0,"index":1318},{"krate":0,"index":1315},{"krate":0,"index":230},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25809,"byte_end":25818,"line_start":11,"line_end":11,"column_start":11,"column_end":20},"name":"SegmentId","qualname":"::gfa::SegmentId","value":"SegmentId: Sized + Default","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" Trait for the types that can be parsed and used as segment IDs;\n will probably only be usize and BString\n","sig":null,"attributes":[{"value":"/ Trait for the types that can be parsed and used as segment IDs;","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25687,"byte_end":25754,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ will probably only be usize and BString","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25755,"byte_end":25798,"line_start":10,"line_end":10,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25845,"byte_end":25850,"line_start":12,"line_end":12,"column_start":8,"column_end":13},"name":"error","qualname":"::gfa::SegmentId::error","value":"pub fn error() -> ParseFieldError","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25881,"byte_end":25889,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"parse_id","qualname":"::gfa::SegmentId::parse_id","value":"pub fn parse_id(&[u8]) -> Option<Self>","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25929,"byte_end":25939,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"parse_next","qualname":"::gfa::SegmentId::parse_next","value":"pub fn parse_next<I>(I) -> Option<Self> where I: Iterator,\nI::Item: AsRef<[u8]>","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":26126,"byte_end":26143,"line_start":25,"line_end":25,"column_start":8,"column_end":25},"name":"parse_next_result","qualname":"::gfa::SegmentId::parse_next_result","value":"pub fn parse_next_result<I>(I) -> Result<Self, ParseFieldError> where\nI: Iterator, I::Item: AsRef<[u8]>","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27444,"byte_end":27447,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"GFA","qualname":"::gfa::GFA","value":"GFA { header, segments, links, containments, paths }","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706}],"decl_id":null,"docs":" This module defines the various GFA line types, the GFA object,\n and some utility functions and types.\n Simple representation of a parsed GFA file, using a Vec<T> to\n store each separate GFA line type.\n","sig":null,"attributes":[{"value":"/ This module defines the various GFA line types, the GFA object,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27161,"byte_end":27228,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ and some utility functions and types.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27229,"byte_end":27270,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"/ Simple representation of a parsed GFA file, using a Vec<T> to","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27272,"byte_end":27337,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/ store each separate GFA line type.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27338,"byte_end":27376,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27475,"byte_end":27481,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"name":"header","qualname":"::gfa::GFA::header","value":"gfa::Header<T>","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27502,"byte_end":27510,"line_start":75,"line_end":75,"column_start":9,"column_end":17},"name":"segments","qualname":"::gfa::GFA::segments","value":"std::vec::Vec<gfa::Segment<N, T>>","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27540,"byte_end":27545,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"name":"links","qualname":"::gfa::GFA::links","value":"std::vec::Vec<gfa::Link<N, T>>","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27572,"byte_end":27584,"line_start":77,"line_end":77,"column_start":9,"column_end":21},"name":"containments","qualname":"::gfa::GFA::containments","value":"std::vec::Vec<gfa::Containment<N, T>>","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27618,"byte_end":27623,"line_start":78,"line_end":78,"column_start":9,"column_end":14},"name":"paths","qualname":"::gfa::GFA::paths","value":"std::vec::Vec<gfa::Path<N, T>>","parent":{"krate":0,"index":699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27922,"byte_end":27933,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"insert_line","qualname":"<GFA<N, T>>::insert_line","value":"pub fn insert_line(&mut Self, Line<N, T>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a GFA line (wrapped in the Line enum) into an existing\n GFA. Simply pushes it into the corresponding Vec in the GFA,\n or replaces the header, so there's no deduplication or sorting\n taking place.\n","sig":null,"attributes":[{"value":"/ Insert a GFA line (wrapped in the Line enum) into an existing","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27683,"byte_end":27748,"line_start":82,"line_end":82,"column_start":5,"column_end":70}},{"value":"/ GFA. Simply pushes it into the corresponding Vec in the GFA,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27753,"byte_end":27817,"line_start":83,"line_end":83,"column_start":5,"column_end":69}},{"value":"/ or replaces the header, so there's no deduplication or sorting","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27822,"byte_end":27888,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/ taking place.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27893,"byte_end":27910,"line_start":85,"line_end":85,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28452,"byte_end":28465,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"gfa_into_iter","qualname":"::gfa::gfa_into_iter","value":"pub fn gfa_into_iter<N, T: OptFields>(GFA<N, T>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Consume a GFA object to produce an iterator over all the lines\n contained within. The iterator first produces all segments, then\n links, then containments, and finally paths.\n","sig":null,"attributes":[{"value":"/ Consume a GFA object to produce an iterator over all the lines","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28260,"byte_end":28326,"line_start":98,"line_end":98,"column_start":1,"column_end":67}},{"value":"/ contained within. The iterator first produces all segments, then","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28327,"byte_end":28395,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/ links, then containments, and finally paths.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28396,"byte_end":28444,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28884,"byte_end":28887,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"new","qualname":"<GFA<N, T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29074,"byte_end":29080,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Header","qualname":"::gfa::Line::Header","value":"Line::Header(Header<T>)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29097,"byte_end":29104,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"Segment","qualname":"::gfa::Line::Segment","value":"Line::Segment(Segment<N, T>)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29125,"byte_end":29129,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Link","qualname":"::gfa::Line::Link","value":"Line::Link(Link<N, T>)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29147,"byte_end":29158,"line_start":125,"line_end":125,"column_start":5,"column_end":16},"name":"Containment","qualname":"::gfa::Line::Containment","value":"Line::Containment(Containment<N, T>)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29183,"byte_end":29187,"line_start":126,"line_end":126,"column_start":5,"column_end":9},"name":"Path","qualname":"::gfa::Line::Path","value":"Line::Path(Path<N, T>)","parent":{"krate":0,"index":751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29046,"byte_end":29050,"line_start":121,"line_end":121,"column_start":10,"column_end":14},"name":"Line","qualname":"::gfa::Line","value":"pub enum Line<N, T: OptFields> {\n    Header(Header<T>),\n    Segment(Segment<N, T>),\n    Link(Link<N, T>),\n    Containment(Containment<N, T>),\n    Path(Path<N, T>),\n}","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766}],"decl_id":null,"docs":" Enum containing the different kinds of GFA lines.\n","sig":null,"attributes":[{"value":"/ Enum containing the different kinds of GFA lines.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28936,"byte_end":28989,"line_start":119,"line_end":119,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29306,"byte_end":29312,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"Header","qualname":"::gfa::Header","value":"Header { version, optional }","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"decl_id":null,"docs":" The header line of a GFA graph\n","sig":null,"attributes":[{"value":"/ The header line of a GFA graph","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29204,"byte_end":29238,"line_start":129,"line_end":129,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29337,"byte_end":29344,"line_start":132,"line_end":132,"column_start":9,"column_end":16},"name":"version","qualname":"::gfa::Header::version","value":"std::option::Option<bstr::BString>","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29371,"byte_end":29379,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Header::optional","value":"T","parent":{"krate":0,"index":793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29610,"byte_end":29617,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"Segment","qualname":"::gfa::Segment","value":"Segment { name, sequence, optional }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" A segment in a GFA graph. Generic over the name type, but\n currently the parser is only defined for N = BString\n","sig":null,"attributes":[{"value":"/ A segment in a GFA graph. Generic over the name type, but","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29387,"byte_end":29448,"line_start":136,"line_end":136,"column_start":1,"column_end":62}},{"value":"/ currently the parser is only defined for N = BString","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29449,"byte_end":29505,"line_start":137,"line_end":137,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29645,"byte_end":29649,"line_start":142,"line_end":142,"column_start":9,"column_end":13},"name":"name","qualname":"::gfa::Segment::name","value":"N","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29662,"byte_end":29670,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"sequence","qualname":"::gfa::Segment::sequence","value":"bstr::BString","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29689,"byte_end":29697,"line_start":144,"line_end":144,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Segment::optional","value":"T","parent":{"krate":0,"index":823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31034,"byte_end":31037,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"new","qualname":"<Segment<BString, T>>::new","value":"pub fn new(&[u8], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":929},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31347,"byte_end":31351,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"Link","qualname":"::gfa::Link","value":"Link { from_segment, from_orient, to_segment, to_orient, overlap, optional }","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31379,"byte_end":31391,"line_start":203,"line_end":203,"column_start":9,"column_end":21},"name":"from_segment","qualname":"::gfa::Link::from_segment","value":"N","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31404,"byte_end":31415,"line_start":204,"line_end":204,"column_start":9,"column_end":20},"name":"from_orient","qualname":"::gfa::Link::from_orient","value":"gfa::Orientation","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31438,"byte_end":31448,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"name":"to_segment","qualname":"::gfa::Link::to_segment","value":"N","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31461,"byte_end":31470,"line_start":206,"line_end":206,"column_start":9,"column_end":18},"name":"to_orient","qualname":"::gfa::Link::to_orient","value":"gfa::Orientation","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31493,"byte_end":31500,"line_start":207,"line_end":207,"column_start":9,"column_end":16},"name":"overlap","qualname":"::gfa::Link::overlap","value":"bstr::BString","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31519,"byte_end":31527,"line_start":208,"line_end":208,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Link::optional","value":"T","parent":{"krate":0,"index":929},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31584,"byte_end":31587,"line_start":212,"line_end":212,"column_start":12,"column_end":15},"name":"new","qualname":"<Link<BString, T>>::new","value":"pub fn new(&[u8], Orientation, &[u8], Orientation, &[u8]) -> Link<BString, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32023,"byte_end":32033,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"usize_name","qualname":"<Link<BString, T>>::usize_name","value":"pub fn usize_name(&Self) -> Option<Link<usize, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32551,"byte_end":32562,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"Containment","qualname":"::gfa::Containment","value":"Containment { container_name, container_orient, contained_name, contained_orient, pos, overlap, optional }","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32590,"byte_end":32604,"line_start":247,"line_end":247,"column_start":9,"column_end":23},"name":"container_name","qualname":"::gfa::Containment::container_name","value":"N","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32617,"byte_end":32633,"line_start":248,"line_end":248,"column_start":9,"column_end":25},"name":"container_orient","qualname":"::gfa::Containment::container_orient","value":"gfa::Orientation","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32656,"byte_end":32670,"line_start":249,"line_end":249,"column_start":9,"column_end":23},"name":"contained_name","qualname":"::gfa::Containment::contained_name","value":"N","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32683,"byte_end":32699,"line_start":250,"line_end":250,"column_start":9,"column_end":25},"name":"contained_orient","qualname":"::gfa::Containment::contained_orient","value":"gfa::Orientation","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1063},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32722,"byte_end":32725,"line_start":251,"line_end":251,"column_start":9,"column_end":12},"name":"pos","qualname":"::gfa::Containment::pos","value":"usize","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1064},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32742,"byte_end":32749,"line_start":252,"line_end":252,"column_start":9,"column_end":16},"name":"overlap","qualname":"::gfa::Containment::overlap","value":"bstr::BString","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32768,"byte_end":32776,"line_start":253,"line_end":253,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Containment::optional","value":"T","parent":{"krate":0,"index":1056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32840,"byte_end":32850,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"usize_name","qualname":"<Containment<BString, T>>::usize_name","value":"pub fn usize_name(&Self) -> Option<Containment<usize, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33639,"byte_end":33643,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"Path","qualname":"::gfa::Path","value":"Path { path_name, segment_names, overlaps, optional }","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"decl_id":null,"docs":" The step list that the path actually consists of is an unparsed\n BString to keep memory down; use path.iter() to get an iterator\n over the parsed path segments and orientations.\n","sig":null,"attributes":[{"value":"/ The step list that the path actually consists of is an unparsed","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33347,"byte_end":33414,"line_start":272,"line_end":272,"column_start":1,"column_end":68}},{"value":"/ BString to keep memory down; use path.iter() to get an iterator","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33415,"byte_end":33482,"line_start":273,"line_end":273,"column_start":1,"column_end":68}},{"value":"/ over the parsed path segments and orientations.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33483,"byte_end":33534,"line_start":274,"line_end":274,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33671,"byte_end":33680,"line_start":279,"line_end":279,"column_start":9,"column_end":18},"name":"path_name","qualname":"::gfa::Path::path_name","value":"bstr::BString","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33699,"byte_end":33712,"line_start":280,"line_end":280,"column_start":9,"column_end":22},"name":"segment_names","qualname":"::gfa::Path::segment_names","value":"bstr::BString","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33731,"byte_end":33739,"line_start":281,"line_end":281,"column_start":9,"column_end":17},"name":"overlaps","qualname":"::gfa::Path::overlaps","value":"std::vec::Vec<bstr::BString>","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33763,"byte_end":33771,"line_start":282,"line_end":282,"column_start":9,"column_end":17},"name":"optional","qualname":"::gfa::Path::optional","value":"T","parent":{"krate":0,"index":1190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33885,"byte_end":33888,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<N, T>>::new","value":"pub fn new(BString, BString, Vec<BString>, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34325,"byte_end":34341,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"parse_segment_id","qualname":"<Path<N, T>>::parse_segment_id","value":"pub fn parse_segment_id(&[u8]) -> Option<(N, Orientation)>","parent":null,"children":[],"decl_id":null,"docs":" Parses (and copies!) a segment ID in the path segment list\n","sig":null,"attributes":[{"value":"/ Parses (and copies!) a segment ID in the path segment list","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34251,"byte_end":34313,"line_start":304,"line_end":304,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34866,"byte_end":34880,"line_start":321,"line_end":321,"column_start":12,"column_end":26},"name":"usize_segments","qualname":"<Path<BString, T>>::usize_segments","value":"pub fn usize_segments(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if each of the segment names of the path can be parsed to `usize`\n","sig":null,"attributes":[{"value":"/ `true` if each of the segment names of the path can be parsed to `usize`","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34778,"byte_end":34854,"line_start":320,"line_end":320,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35004,"byte_end":35018,"line_start":326,"line_end":326,"column_start":12,"column_end":26},"name":"segment_id_ref","qualname":"<Path<BString, T>>::segment_id_ref","value":"pub fn segment_id_ref(&[u8]) -> (&BStr, Orientation)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35578,"byte_end":35582,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path<BString, T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the segments of the given path,\n parsing the orientation and producing a slice to each segment\n name\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the segments of the given path,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35422,"byte_end":35483,"line_start":340,"line_end":340,"column_start":5,"column_end":66}},{"value":"/ parsing the orientation and producing a slice to each segment","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35488,"byte_end":35553,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/ name","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35558,"byte_end":35566,"line_start":342,"line_end":342,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35728,"byte_end":35738,"line_start":347,"line_end":347,"column_start":12,"column_end":22},"name":"usize_path","qualname":"<Path<BString, T>>::usize_path","value":"pub fn usize_path(&Self) -> Option<Path<usize, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36194,"byte_end":36198,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path<usize, T>>::iter","value":"pub fn iter<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator over the usize segments of the given\n path.\n","sig":null,"attributes":[{"value":"/ Produces an iterator over the usize segments of the given","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36107,"byte_end":36168,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ path.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36173,"byte_end":36182,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36553,"byte_end":36560,"line_start":378,"line_end":378,"column_start":5,"column_end":12},"name":"Forward","qualname":"::gfa::Orientation::Forward","value":"Orientation::Forward","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36566,"byte_end":36574,"line_start":379,"line_end":379,"column_start":5,"column_end":13},"name":"Backward","qualname":"::gfa::Orientation::Backward","value":"Orientation::Backward","parent":{"krate":0,"index":1310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1310},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36535,"byte_end":36546,"line_start":377,"line_end":377,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::gfa::Orientation","value":"pub enum Orientation { Forward, Backward, }","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1313}],"decl_id":null,"docs":" Represents segment orientation/strand\n","sig":null,"attributes":[{"value":"/ Represents segment orientation/strand","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36394,"byte_end":36435,"line_start":373,"line_end":373,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36703,"byte_end":36724,"line_start":385,"line_end":385,"column_start":12,"column_end":33},"name":"from_bytes_plus_minus","qualname":"<Orientation>::from_bytes_plus_minus","value":"pub fn from_bytes_plus_minus<T: AsRef<[u8]>>(T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse an orientation from a single-element, where + is\n Forward, - is Backward\n","sig":null,"attributes":[{"value":"/ Parse an orientation from a single-element, where + is","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36602,"byte_end":36660,"line_start":383,"line_end":383,"column_start":5,"column_end":63}},{"value":"/ Forward, - is Backward","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36665,"byte_end":36691,"line_start":384,"line_end":384,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36942,"byte_end":36953,"line_start":393,"line_end":393,"column_start":12,"column_end":23},"name":"parse_error","qualname":"<Orientation>::parse_error","value":"pub fn parse_error(Option<Self>) -> Result<Self, ParseFieldError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37079,"byte_end":37095,"line_start":397,"line_end":397,"column_start":12,"column_end":28},"name":"write_plus_minus","qualname":"<Orientation>::write_plus_minus","value":"pub fn write_plus_minus(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37339,"byte_end":37357,"line_start":408,"line_end":408,"column_start":12,"column_end":30},"name":"plus_minus_as_byte","qualname":"<Orientation>::plus_minus_as_byte","value":"pub fn plus_minus_as_byte(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37598,"byte_end":37614,"line_start":417,"line_end":417,"column_start":12,"column_end":28},"name":"from_bytes_gt_ln","qualname":"<Orientation>::from_bytes_gt_ln","value":"pub fn from_bytes_gt_ln<T: AsRef<[u8]>>(T) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse an orientation from a single-element bytestring, where >\n is Forward, < is Backward\n","sig":null,"attributes":[{"value":"/ Parse an orientation from a single-element bytestring, where >","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37486,"byte_end":37552,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/ is Forward, < is Backward","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37557,"byte_end":37586,"line_start":416,"line_end":416,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":37832,"byte_end":37843,"line_start":425,"line_end":425,"column_start":12,"column_end":23},"name":"write_gt_ln","qualname":"<Orientation>::write_gt_ln","value":"pub fn write_gt_ln(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38480,"byte_end":38490,"line_start":455,"line_end":455,"column_start":12,"column_end":22},"name":"is_reverse","qualname":"<Orientation>::is_reverse","value":"pub fn is_reverse(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gfa_name_conversion","qualname":"::gfa_name_conversion","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":1745},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":1749},{"krate":0,"index":271},{"krate":0,"index":1751},{"krate":0,"index":1373},{"krate":0,"index":1422},{"krate":0,"index":1377},{"krate":0,"index":272},{"krate":0,"index":1428},{"krate":0,"index":1487},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1477},{"krate":0,"index":1432},{"krate":0,"index":280}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":41544,"byte_end":41551,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"NameMap","qualname":"::gfa_name_conversion::NameMap","value":"NameMap {  }","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":41802,"byte_end":41811,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"save_json","qualname":"<NameMap>::save_json","value":"pub fn save_json<P: AsRef<std::path::Path>>(&Self, P) -> std::io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Save the NameMap to a JSON file.\n","sig":null,"attributes":[{"value":"/ Save the NameMap to a JSON file.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":41754,"byte_end":41790,"line_start":85,"line_end":85,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":42223,"byte_end":42232,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"load_json","qualname":"<NameMap>::load_json","value":"pub fn load_json<P: AsRef<std::path::Path>>(P) -> std::io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Load a NameMap from a JSON file.\n","sig":null,"attributes":[{"value":"/ Load a NameMap from a JSON file.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":42175,"byte_end":42211,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":45006,"byte_end":45026,"line_start":195,"line_end":195,"column_start":12,"column_end":32},"name":"gfa_bstring_to_usize","qualname":"<NameMap>::gfa_bstring_to_usize","value":"pub fn gfa_bstring_to_usize<T: OptFields>(&Self, &GFA<BString, T>, bool)\n-> Option<GFA<usize, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":47015,"byte_end":47035,"line_start":253,"line_end":253,"column_start":12,"column_end":32},"name":"gfa_usize_to_bstring","qualname":"<NameMap>::gfa_usize_to_bstring","value":"pub fn gfa_usize_to_bstring<T: OptFields>(&Self, &GFA<usize, T>)\n-> Option<GFA<BString, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":48830,"byte_end":48844,"line_start":301,"line_end":301,"column_start":12,"column_end":26},"name":"gfa_hash_error","qualname":"<NameMap>::gfa_hash_error","value":"pub fn gfa_hash_error<T: OptFields>(&Self, &GFA<BString, T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":49292,"byte_end":49306,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"build_from_gfa","qualname":"<NameMap>::build_from_gfa","value":"pub fn build_from_gfa<T: OptFields>(&GFA<BString, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"optfields","qualname":"::optfields","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":1489},{"krate":0,"index":1512},{"krate":0,"index":1510},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1496},{"krate":0,"index":1493},{"krate":0,"index":1514},{"krate":0,"index":1551},{"krate":0,"index":1549},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1539},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":355},{"krate":0,"index":360}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53497,"byte_end":53511,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"OptionalFields","qualname":"::optfields::OptionalFields","value":"Vec<OptField>","parent":null,"children":[],"decl_id":null,"docs":" These type aliases are useful for configuring the parsers, as the\n type of the optional field container must be given when creating a\n GFAParser or GFA object.\n","sig":null,"attributes":[{"value":"/ These type aliases are useful for configuring the parsers, as the","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53318,"byte_end":53387,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ type of the optional field container must be given when creating a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53388,"byte_end":53458,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ GFAParser or GFA object.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53459,"byte_end":53487,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53538,"byte_end":53554,"line_start":10,"line_end":10,"column_start":10,"column_end":26},"name":"NoOptionalFields","qualname":"::optfields::NoOptionalFields","value":"()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53743,"byte_end":53751,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"OptField","qualname":"::optfields::OptField","value":"OptField { tag, value }","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1492}],"decl_id":null,"docs":" An optional field a la SAM. Identified by its tag, which is any\n two characters matching [A-Za-z][A-Za-z0-9].\n","sig":null,"attributes":[{"value":"/ An optional field a la SAM. Identified by its tag, which is any","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53562,"byte_end":53629,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ two characters matching [A-Za-z][A-Za-z0-9].","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53630,"byte_end":53678,"line_start":13,"line_end":13,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1490},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53762,"byte_end":53765,"line_start":16,"line_end":16,"column_start":9,"column_end":12},"name":"tag","qualname":"::optfields::OptField::tag","value":"[u8; 2]","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1492},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53784,"byte_end":53789,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"value","qualname":"::optfields::OptField::value","value":"optfields::OptFieldVal","parent":{"krate":0,"index":1489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54128,"byte_end":54129,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"A","qualname":"::optfields::OptFieldVal::A","value":"OptFieldVal::A(u8)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54139,"byte_end":54142,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Int","qualname":"::optfields::OptFieldVal::Int","value":"OptFieldVal::Int(i64)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1521},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54153,"byte_end":54158,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Float","qualname":"::optfields::OptFieldVal::Float","value":"OptFieldVal::Float(f32)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54169,"byte_end":54170,"line_start":29,"line_end":29,"column_start":5,"column_end":6},"name":"Z","qualname":"::optfields::OptFieldVal::Z","value":"OptFieldVal::Z(BString)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54185,"byte_end":54186,"line_start":30,"line_end":30,"column_start":5,"column_end":6},"name":"J","qualname":"::optfields::OptFieldVal::J","value":"OptFieldVal::J(BString)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1530},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54201,"byte_end":54202,"line_start":31,"line_end":31,"column_start":5,"column_end":6},"name":"H","qualname":"::optfields::OptFieldVal::H","value":"OptFieldVal::H(Vec<u32>)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1533},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54218,"byte_end":54222,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"BInt","qualname":"::optfields::OptFieldVal::BInt","value":"OptFieldVal::BInt(Vec<i64>)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54238,"byte_end":54244,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"BFloat","qualname":"::optfields::OptFieldVal::BFloat","value":"OptFieldVal::BFloat(Vec<f32>)","parent":{"krate":0,"index":1514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54110,"byte_end":54121,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"name":"OptFieldVal","qualname":"::optfields::OptFieldVal","value":"pub enum OptFieldVal {\n    A(u8),\n    Int(i64),\n    Float(f32),\n    Z(BString),\n    J(BString),\n    H(Vec<u32>),\n    BInt(Vec<i64>),\n    BFloat(Vec<f32>),\n}","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1521},{"krate":0,"index":1524},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1533},{"krate":0,"index":1536}],"decl_id":null,"docs":" enum for representing each of the SAM optional field types. The\n `B` type, which denotes either an integer or float array, is split\n in two variants, and they ignore the size modifiers in the spec,\n instead always holding i64 or f32.\n","sig":null,"attributes":[{"value":"/ enum for representing each of the SAM optional field types. The","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53807,"byte_end":53874,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ `B` type, which denotes either an integer or float array, is split","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53875,"byte_end":53945,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ in two variants, and they ignore the size modifiers in the spec,","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":53946,"byte_end":54014,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ instead always holding i64 or f32.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54015,"byte_end":54053,"line_start":23,"line_end":23,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55009,"byte_end":55012,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"tag","qualname":"<OptField>::tag","value":"pub fn tag(&[u8]) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Panics if the provided tag doesn't match the regex\n [A-Za-z][A-Za-z0-9].\n","sig":null,"attributes":[{"value":"/ Panics if the provided tag doesn't match the regex","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54914,"byte_end":54968,"line_start":59,"line_end":59,"column_start":5,"column_end":59}},{"value":"/ [A-Za-z][A-Za-z0-9].","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54973,"byte_end":54997,"line_start":60,"line_end":60,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55357,"byte_end":55360,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<OptField>::new","value":"pub fn new(&[u8], OptFieldVal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new OptField from a tag name and a value, panicking\n if the provided tag doesn't fulfill the requirements of\n OptField::tag().\n","sig":null,"attributes":[{"value":"/ Create a new OptField from a tag name and a value, panicking","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55192,"byte_end":55256,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/ if the provided tag doesn't fulfill the requirements of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55261,"byte_end":55320,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/ OptField::tag().","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55325,"byte_end":55345,"line_start":70,"line_end":70,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55585,"byte_end":55590,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"parse","qualname":"<OptField>::parse","value":"pub fn parse(&[u8]) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses an optional field from a bytestring in the format\n <TAG>:<TYPE>:<VALUE>\n","sig":null,"attributes":[{"value":"/ Parses an optional field from a bytestring in the format","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55484,"byte_end":55544,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"/ <TAG>:<TYPE>:<VALUE>","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":55549,"byte_end":55573,"line_start":77,"line_end":77,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59894,"byte_end":59903,"line_start":201,"line_end":201,"column_start":11,"column_end":20},"name":"OptFields","qualname":"::optfields::OptFields","value":"OptFields: Sized + Default + Clone + std::hash::Hash","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" The OptFields trait describes how to parse, store, and query\n optional fields. Each of the GFA line types and the GFA struct\n itself are generic over the optional fields, so the choice of\n OptFields implementor can impact memory usage, which optional\n fields are parsed, and possibly more in the future\n","sig":null,"attributes":[{"value":"/ The OptFields trait describes how to parse, store, and query","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59565,"byte_end":59629,"line_start":196,"line_end":196,"column_start":1,"column_end":65}},{"value":"/ optional fields. Each of the GFA line types and the GFA struct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59630,"byte_end":59696,"line_start":197,"line_end":197,"column_start":1,"column_end":67}},{"value":"/ itself are generic over the optional fields, so the choice of","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59697,"byte_end":59762,"line_start":198,"line_end":198,"column_start":1,"column_end":66}},{"value":"/ OptFields implementor can impact memory usage, which optional","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59763,"byte_end":59828,"line_start":199,"line_end":199,"column_start":1,"column_end":66}},{"value":"/ fields are parsed, and possibly more in the future","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59829,"byte_end":59883,"line_start":200,"line_end":200,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60024,"byte_end":60033,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"get_field","qualname":"::optfields::OptFields::get_field","value":"pub fn get_field(&Self, &[u8]) -> Option<&OptField>","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Return the optional field with the given tag, if it exists.\n","sig":null,"attributes":[{"value":"/ Return the optional field with the given tag, if it exists.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59953,"byte_end":60016,"line_start":202,"line_end":202,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60212,"byte_end":60218,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"fields","qualname":"::optfields::OptFields::fields","value":"pub fn fields(&Self) -> &[OptField]","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Return a slice over all optional fields. NB: This may be\n replaced by an iterator or something else in the future\n","sig":null,"attributes":[{"value":"/ Return a slice over all optional fields. NB: This may be","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60080,"byte_end":60140,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/ replaced by an iterator or something else in the future","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60145,"byte_end":60204,"line_start":206,"line_end":206,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60568,"byte_end":60573,"line_start":214,"line_end":214,"column_start":8,"column_end":13},"name":"parse","qualname":"::optfields::OptFields::parse","value":"pub fn parse<T>(T) -> Self where T: IntoIterator, T::Item: AsRef<[u8]>","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":" Given an iterator over bytestrings, each expected to hold one\n optional field (in the <TAG>:<TYPE>:<VALUE> format), parse\n them as optional fields to create a collection. Returns `Self`\n rather than `Option<Self>` for now, but this may be changed to\n become fallible in the future.\n","sig":null,"attributes":[{"value":"/ Given an iterator over bytestrings, each expected to hold one","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60247,"byte_end":60312,"line_start":209,"line_end":209,"column_start":5,"column_end":70}},{"value":"/ optional field (in the <TAG>:<TYPE>:<VALUE> format), parse","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60317,"byte_end":60379,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ them as optional fields to create a collection. Returns `Self`","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60384,"byte_end":60450,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ rather than `Option<Self>` for now, but this may be changed to","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60455,"byte_end":60521,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"/ become fallible in the future.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":60526,"byte_end":60560,"line_start":213,"line_end":213,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":1619},{"krate":0,"index":1635},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1654},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":389},{"krate":0,"index":394},{"krate":0,"index":406},{"krate":0,"index":412},{"krate":0,"index":416},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":454},{"krate":0,"index":460},{"krate":0,"index":468}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62144,"byte_end":62156,"line_start":14,"line_end":14,"column_start":5,"column_end":17},"name":"UsizeIdError","qualname":"::parser::ParseFieldError::UsizeIdError","value":"ParseFieldError::UsizeIdError","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" A segment ID couldn't be parsed as a usize. Can only happen\n when parsing into a GFA<usize, T>.\n","sig":null,"attributes":[{"value":"/ A segment ID couldn't be parsed as a usize. Can only happen","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62033,"byte_end":62096,"line_start":12,"line_end":12,"column_start":5,"column_end":68}},{"value":"/ when parsing into a GFA<usize, T>.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62101,"byte_end":62139,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62269,"byte_end":62285,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"BStringUtf8Error","qualname":"::parser::ParseFieldError::BStringUtf8Error","value":"ParseFieldError::BStringUtf8Error","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" A bytestring couldn't be parsed as a bytestring, can happen\n when the contents aren't UTF8.\n","sig":null,"attributes":[{"value":"/ A bytestring couldn't be parsed as a bytestring, can happen","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62162,"byte_end":62225,"line_start":15,"line_end":15,"column_start":5,"column_end":68}},{"value":"/ when the contents aren't UTF8.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62230,"byte_end":62264,"line_start":16,"line_end":16,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1624},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62353,"byte_end":62369,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"OrientationError","qualname":"::parser::ParseFieldError::OrientationError","value":"ParseFieldError::OrientationError","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" Attempted to parse an orientation that wasn't + or -.\n","sig":null,"attributes":[{"value":"/ Attempted to parse an orientation that wasn't + or -.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62291,"byte_end":62348,"line_start":18,"line_end":18,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62488,"byte_end":62500,"line_start":22,"line_end":22,"column_start":5,"column_end":17},"name":"InvalidField","qualname":"::parser::ParseFieldError::InvalidField","value":"ParseFieldError::InvalidField(&'static str)","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" A required field was incorrectly formatted. Includes the field\n name as defined by the GFA1 spec.\n","sig":null,"attributes":[{"value":"/ A required field was incorrectly formatted. Includes the field","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62375,"byte_end":62441,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ name as defined by the GFA1 spec.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62446,"byte_end":62483,"line_start":21,"line_end":21,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1629},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62520,"byte_end":62533,"line_start":23,"line_end":23,"column_start":5,"column_end":18},"name":"MissingFields","qualname":"::parser::ParseFieldError::MissingFields","value":"ParseFieldError::MissingFields","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62539,"byte_end":62544,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Other","qualname":"::parser::ParseFieldError::Other","value":"ParseFieldError::Other","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62011,"byte_end":62026,"line_start":11,"line_end":11,"column_start":10,"column_end":25},"name":"ParseFieldError","qualname":"::parser::ParseFieldError","value":"pub enum ParseFieldError {\n\n    /// A segment ID couldn't be parsed as a usize. Can only happen\n    /// when parsing into a GFA<usize, T>.\n    UsizeIdError,\n\n    /// A bytestring couldn't be parsed as a bytestring, can happen\n    /// when the contents aren't UTF8.\n    BStringUtf8Error,\n\n    /// Attempted to parse an orientation that wasn't + or -.\n    OrientationError,\n\n    /// A required field was incorrectly formatted. Includes the field\n    /// name as defined by the GFA1 spec.\n    InvalidField(&'static str),\n    MissingFields,\n    Other,\n}","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62809,"byte_end":62824,"line_start":33,"line_end":33,"column_start":5,"column_end":20},"name":"UnknownLineType","qualname":"::parser::ParseError::UnknownLineType","value":"ParseError::UnknownLineType","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" The line type was something other than 'H', 'S', 'L', 'C', or\n 'P'. This is ignored by the file parser rather than a fail\n condition.\n","sig":null,"attributes":[{"value":"/ The line type was something other than 'H', 'S', 'L', 'C', or","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62653,"byte_end":62718,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/ 'P'. This is ignored by the file parser rather than a fail","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62723,"byte_end":62785,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ condition.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62790,"byte_end":62804,"line_start":32,"line_end":32,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1640},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62884,"byte_end":62893,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"EmptyLine","qualname":"::parser::ParseError::EmptyLine","value":"ParseError::EmptyLine","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Tried to parse an empty line. Can be ignored.\n","sig":null,"attributes":[{"value":"/ Tried to parse an empty line. Can be ignored.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62830,"byte_end":62879,"line_start":34,"line_end":34,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1642},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63004,"byte_end":63015,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"InvalidLine","qualname":"::parser::ParseError::InvalidLine","value":"ParseError::InvalidLine(ParseFieldError, String)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" A line couldn't be parsed. Includes the problem line and a\n variant describing the error.\n","sig":null,"attributes":[{"value":"/ A line couldn't be parsed. Includes the problem line and a","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62899,"byte_end":62961,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/ variant describing the error.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62966,"byte_end":62999,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63046,"byte_end":63058,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"InvalidField","qualname":"::parser::ParseError::InvalidField","value":"ParseError::InvalidField(ParseFieldError)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63114,"byte_end":63121,"line_start":41,"line_end":41,"column_start":5,"column_end":12},"name":"IOError","qualname":"::parser::ParseError::IOError","value":"ParseError::IOError(std::io::Error)","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":" Wrapper for an IO error.\n","sig":null,"attributes":[{"value":"/ Wrapper for an IO error.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63081,"byte_end":63109,"line_start":40,"line_end":40,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63144,"byte_end":63149,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Other","qualname":"::parser::ParseError::Other","value":"ParseError::Other","parent":{"krate":0,"index":1637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1637},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62636,"byte_end":62646,"line_start":29,"line_end":29,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parser::ParseError","value":"pub enum ParseError {\n\n    /// The line type was something other than 'H', 'S', 'L', 'C', or\n    /// 'P'. This is ignored by the file parser rather than a fail\n    /// condition.\n    UnknownLineType,\n\n    /// Tried to parse an empty line. Can be ignored.\n    EmptyLine,\n\n    /// A line couldn't be parsed. Includes the problem line and a\n    /// variant describing the error.\n    InvalidLine(ParseFieldError, String),\n    InvalidField(ParseFieldError),\n\n    /// Wrapper for an IO error.\n    IOError(std::io::Error),\n    Other,\n}","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652}],"decl_id":null,"docs":" Type encapsulating different kinds of GFA parsing errors\n","sig":null,"attributes":[{"value":"/ Type encapsulating different kinds of GFA parsing errors","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":62549,"byte_end":62609,"line_start":27,"line_end":27,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63402,"byte_end":63407,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"other","qualname":"<ParseError>::other","value":"pub fn other() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63638,"byte_end":63656,"line_start":65,"line_end":65,"column_start":12,"column_end":30},"name":"break_if_necessary","qualname":"<ParseError>::break_if_necessary","value":"pub fn break_if_necessary(Self) -> GFAResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63814,"byte_end":63833,"line_start":73,"line_end":73,"column_start":18,"column_end":37},"name":"can_safely_continue","qualname":"<ParseError>::can_safely_continue","value":"pub const fn can_safely_continue(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64052,"byte_end":64068,"line_start":83,"line_end":83,"column_start":12,"column_end":28},"name":"GFAParserBuilder","qualname":"::parser::GFAParserBuilder","value":"GFAParserBuilder { segments, links, containments, paths }","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393}],"decl_id":null,"docs":" Builder struct for GFAParsers\n","sig":null,"attributes":[{"value":"/ Builder struct for GFAParsers","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64007,"byte_end":64040,"line_start":82,"line_end":82,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64079,"byte_end":64087,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"name":"segments","qualname":"::parser::GFAParserBuilder::segments","value":"bool","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64103,"byte_end":64108,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"links","qualname":"::parser::GFAParserBuilder::links","value":"bool","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64124,"byte_end":64136,"line_start":86,"line_end":86,"column_start":9,"column_end":21},"name":"containments","qualname":"::parser::GFAParserBuilder::containments","value":"bool","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64152,"byte_end":64157,"line_start":87,"line_end":87,"column_start":9,"column_end":14},"name":"paths","qualname":"::parser::GFAParserBuilder::paths","value":"bool","parent":{"krate":0,"index":389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64279,"byte_end":64283,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"none","qualname":"<GFAParserBuilder>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse no GFA lines, useful if you only want to parse one line type.\n","sig":null,"attributes":[{"value":"/ Parse no GFA lines, useful if you only want to parse one line type.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64196,"byte_end":64267,"line_start":91,"line_end":91,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64494,"byte_end":64497,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"all","qualname":"<GFAParserBuilder>::all","value":"pub fn all() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse all GFA lines.\n","sig":null,"attributes":[{"value":"/ Parse all GFA lines.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64458,"byte_end":64482,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64675,"byte_end":64680,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"build","qualname":"<GFAParserBuilder>::build","value":"pub fn build<N: SegmentId, T: OptFields>(Self) -> GFAParser<N, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64955,"byte_end":64969,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"build_usize_id","qualname":"<GFAParserBuilder>::build_usize_id","value":"pub fn build_usize_id<T: OptFields>(Self) -> GFAParser<usize, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":65054,"byte_end":65067,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"build_bstr_id","qualname":"<GFAParserBuilder>::build_bstr_id","value":"pub fn build_bstr_id<T: OptFields>(Self) -> GFAParser<BString, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":65731,"byte_end":65740,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"GFAParser","qualname":"::parser::GFAParser","value":"GFAParser {  }","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66263,"byte_end":66266,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"new","qualname":"<GFAParser<N, T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new GFAParser that will parse all four GFA line\n types, and use the optional fields parser and storage `T`.\n","sig":null,"attributes":[{"value":"/ Create a new GFAParser that will parse all four GFA line","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66124,"byte_end":66184,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/ types, and use the optional fields parser and storage `T`.","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66189,"byte_end":66251,"line_start":167,"line_end":167,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66740,"byte_end":66756,"line_start":181,"line_end":181,"column_start":12,"column_end":28},"name":"parse_line_bytes","qualname":"<GFAParser<N, T>>::parse_line_bytes","value":"pub fn parse_line_bytes(&Self, &[u8]) -> Option<Line<N, T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":67539,"byte_end":67560,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"parse_line_with_error","qualname":"<GFAParser<N, T>>::parse_line_with_error","value":"pub fn parse_line_with_error(&Self, &[u8]) -> Result<Line<N, T>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":68613,"byte_end":68624,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"parse_lines","qualname":"<GFAParser<N, T>>::parse_lines","value":"pub fn parse_lines<I>(&Self, I) -> GFAResult<GFA<N, T>> where I: Iterator,\nI::Item: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":69082,"byte_end":69092,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"parse_file","qualname":"<GFAParser<N, T>>::parse_file","value":"pub fn parse_file<P: AsRef<std::path::Path>>(&Self, P)\n-> Result<GFA<N, T>, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\writer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"writer","qualname":"::writer","value":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\writer.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":496},{"krate":0,"index":501},{"krate":0,"index":508}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\writer.rs","byte_start":81722,"byte_end":81731,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"write_gfa","qualname":"::writer::write_gfa","value":"pub fn write_gfa<N: Display, T: Write, U: OptFields>(&GFA<N, U>, &mut T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\writer.rs","byte_start":82232,"byte_end":82242,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"gfa_string","qualname":"::writer::gfa_string","value":"pub fn gfa_string(&GFA<BString, OptionalFields>) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":857,"byte_end":860,"line_start":29,"line_end":29,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1873,"byte_end":1880,"line_start":70,"line_end":70,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":2350,"byte_end":2357,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4173,"byte_end":4180,"line_start":142,"line_end":142,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4736,"byte_end":4743,"line_start":161,"line_end":161,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5686,"byte_end":5689,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9039,"byte_end":9046,"line_start":328,"line_end":328,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9701,"byte_end":9710,"line_start":355,"line_end":355,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10332,"byte_end":10341,"line_start":384,"line_end":384,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10417,"byte_end":10424,"line_start":390,"line_end":390,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11650,"byte_end":11657,"line_start":447,"line_end":447,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11842,"byte_end":11849,"line_start":454,"line_end":454,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":12216,"byte_end":12221,"line_start":469,"line_end":469,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":109},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16723,"byte_end":16728,"line_start":610,"line_end":610,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":26803,"byte_end":26810,"line_start":52,"line_end":52,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27667,"byte_end":27670,"line_start":81,"line_end":81,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28861,"byte_end":28864,"line_start":113,"line_end":113,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29727,"byte_end":29734,"line_start":147,"line_end":147,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":30001,"byte_end":30005,"line_start":157,"line_end":157,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":30398,"byte_end":30409,"line_start":170,"line_end":170,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31001,"byte_end":31008,"line_start":189,"line_end":189,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31554,"byte_end":31558,"line_start":211,"line_end":211,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32803,"byte_end":32814,"line_start":256,"line_end":256,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33861,"byte_end":33865,"line_start":286,"line_end":286,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34234,"byte_end":34238,"line_start":303,"line_end":303,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34755,"byte_end":34759,"line_start":319,"line_end":319,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35399,"byte_end":35403,"line_start":339,"line_end":339,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36086,"byte_end":36090,"line_start":361,"line_end":361,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36584,"byte_end":36595,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38130,"byte_end":38141,"line_start":438,"line_end":438,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38455,"byte_end":38466,"line_start":454,"line_end":454,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38645,"byte_end":38656,"line_start":461,"line_end":461,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38974,"byte_end":38985,"line_start":471,"line_end":471,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":40234,"byte_end":40247,"line_start":24,"line_end":24,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":41740,"byte_end":41747,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54284,"byte_end":54295,"line_start":36,"line_end":36,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54899,"byte_end":54907,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":58502,"byte_end":58510,"line_start":159,"line_end":159,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":61336,"byte_end":61339,"line_start":244,"line_end":244,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63281,"byte_end":63291,"line_start":49,"line_end":49,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63378,"byte_end":63388,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64173,"byte_end":64189,"line_start":90,"line_end":90,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":65946,"byte_end":65955,"line_start":158,"line_end":158,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66102,"byte_end":66111,"line_start":165,"line_end":165,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":70214,"byte_end":70220,"line_start":296,"line_end":296,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":71342,"byte_end":71349,"line_start":337,"line_end":337,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":71835,"byte_end":71839,"line_start":358,"line_end":358,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":72593,"byte_end":72604,"line_start":387,"line_end":387,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":73815,"byte_end":73819,"line_start":427,"line_end":427,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":8,"byte_end":14,"line_start":1,"line_end":1,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":24,"byte_end":27,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":37,"byte_end":56,"line_start":3,"line_end":3,"column_start":9,"column_end":28},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":66,"byte_end":75,"line_start":4,"line_end":4,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":314}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":85,"byte_end":91,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\lib.rs","byte_start":101,"byte_end":107,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":475}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":857,"byte_end":860,"line_start":29,"line_end":29,"column_start":32,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":509},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":1873,"byte_end":1880,"line_start":70,"line_end":70,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":2350,"byte_end":2357,"line_start":87,"line_end":87,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4173,"byte_end":4180,"line_start":142,"line_end":142,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":4736,"byte_end":4743,"line_start":161,"line_end":161,"column_start":18,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":5686,"byte_end":5689,"line_start":193,"line_end":193,"column_start":32,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9039,"byte_end":9046,"line_start":328,"line_end":328,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":1852}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":9701,"byte_end":9710,"line_start":355,"line_end":355,"column_start":6,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":630},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10332,"byte_end":10341,"line_start":384,"line_end":384,"column_start":20,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":630},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":10417,"byte_end":10424,"line_start":390,"line_end":390,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11650,"byte_end":11657,"line_start":447,"line_end":447,"column_start":28,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":11842,"byte_end":11849,"line_start":454,"line_end":454,"column_start":28,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":12216,"byte_end":12221,"line_start":469,"line_end":469,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gafpaf.rs","byte_start":16723,"byte_end":16728,"line_start":610,"line_end":610,"column_start":28,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25820,"byte_end":25825,"line_start":11,"line_end":11,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":149}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":25828,"byte_end":25835,"line_start":11,"line_end":11,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":149}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":26803,"byte_end":26810,"line_start":52,"line_end":52,"column_start":20,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":14,"index":1037},"to":{"krate":0,"index":149}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":27667,"byte_end":27670,"line_start":81,"line_end":81,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":28861,"byte_end":28864,"line_start":113,"line_end":113,"column_start":34,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":29727,"byte_end":29734,"line_start":147,"line_end":147,"column_start":23,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":30001,"byte_end":30005,"line_start":157,"line_end":157,"column_start":23,"column_end":27},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":30398,"byte_end":30409,"line_start":170,"line_end":170,"column_start":23,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31001,"byte_end":31008,"line_start":189,"line_end":189,"column_start":20,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":31554,"byte_end":31558,"line_start":211,"line_end":211,"column_start":20,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":32803,"byte_end":32814,"line_start":256,"line_end":256,"column_start":20,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":33861,"byte_end":33865,"line_start":286,"line_end":286,"column_start":34,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34234,"byte_end":34238,"line_start":303,"line_end":303,"column_start":34,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":34755,"byte_end":34759,"line_start":319,"line_end":319,"column_start":20,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":35399,"byte_end":35403,"line_start":339,"line_end":339,"column_start":20,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36086,"byte_end":36090,"line_start":361,"line_end":361,"column_start":20,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":36584,"byte_end":36595,"line_start":382,"line_end":382,"column_start":6,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38130,"byte_end":38141,"line_start":438,"line_end":438,"column_start":18,"column_end":29},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38455,"byte_end":38466,"line_start":454,"line_end":454,"column_start":6,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38645,"byte_end":38656,"line_start":461,"line_end":461,"column_start":28,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":7741}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa.rs","byte_start":38974,"byte_end":38985,"line_start":471,"line_end":471,"column_start":28,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1310},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":40234,"byte_end":40247,"line_start":24,"line_end":24,"column_start":6,"column_end":19},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\gfa_name_conversion.rs","byte_start":41740,"byte_end":41747,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54284,"byte_end":54295,"line_start":36,"line_end":36,"column_start":26,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1514},"to":{"krate":2,"index":6398}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":54899,"byte_end":54907,"line_start":58,"line_end":58,"column_start":6,"column_end":14},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":58502,"byte_end":58510,"line_start":159,"line_end":159,"column_start":28,"column_end":36},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1489},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59905,"byte_end":59910,"line_start":201,"line_end":201,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1932},"to":{"krate":0,"index":350}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59913,"byte_end":59920,"line_start":201,"line_end":201,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1915},"to":{"krate":0,"index":350}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59923,"byte_end":59928,"line_start":201,"line_end":201,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1625},"to":{"krate":0,"index":350}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":59942,"byte_end":59946,"line_start":201,"line_end":201,"column_start":59,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":6398},"to":{"krate":0,"index":350}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\optfields.rs","byte_start":61336,"byte_end":61339,"line_start":244,"line_end":244,"column_start":20,"column_end":23},"kind":{"Impl":{"id":54}},"from":{"krate":5,"index":4232},"to":{"krate":0,"index":350}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63281,"byte_end":63291,"line_start":49,"line_end":49,"column_start":31,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":63378,"byte_end":63388,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":64173,"byte_end":64189,"line_start":90,"line_end":90,"column_start":6,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":65946,"byte_end":65955,"line_start":158,"line_end":158,"column_start":46,"column_end":55},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":66102,"byte_end":66111,"line_start":165,"line_end":165,"column_start":34,"column_end":43},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":70214,"byte_end":70220,"line_start":296,"line_end":296,"column_start":20,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":71342,"byte_end":71349,"line_start":337,"line_end":337,"column_start":34,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":71835,"byte_end":71839,"line_start":358,"line_end":358,"column_start":34,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":72593,"byte_end":72604,"line_start":387,"line_end":387,"column_start":34,"column_end":45},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\mstie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfa-0.7.0\\src\\parser.rs","byte_start":73815,"byte_end":73819,"line_start":427,"line_end":427,"column_start":34,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1190},"to":{"krate":4294967295,"index":4294967295}}]}